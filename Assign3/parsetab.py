
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '09720199B07A9F280765FDCA8019B428'
    
_lr_action_items = {'DOUBLEEQ':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,71,71,71,71,-56,-51,71,71,71,71,71,71,71,71,71,71,71,71,71,-50,71,-59,-68,-60,-64,-67,-46,-62,71,-63,-57,-45,71,-58,-48,-47,-61,71,71,-55,-69,71,-49,71,-77,71,-73,71,71,]),'DIVIDE':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,85,85,85,85,-56,-51,85,85,85,85,85,85,85,85,85,85,85,85,85,-50,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-48,-47,85,85,85,-55,85,85,-49,85,-77,85,-73,85,85,]),'RETURN':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[4,4,-74,-72,-75,-76,-71,-70,4,4,-56,-51,4,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,4,-65,-53,-55,-69,-66,-49,-77,-73,4,4,4,]),'LOG':([41,],[104,]),'MODEQ':([17,100,],[46,46,]),'STRNEQUAL':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,74,74,74,74,-56,-51,74,74,74,74,74,74,74,74,74,74,74,74,74,-50,74,-59,-68,-60,-64,-67,-46,-62,74,-63,-57,-45,74,-58,-48,-47,-61,74,74,-55,-69,74,-49,74,-77,74,-73,74,74,]),'NUMBER':([3,4,25,29,31,33,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,151,155,161,171,175,179,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'WHILE':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[2,2,-74,-72,-75,-76,-71,-70,2,2,-56,-51,2,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,2,-65,-53,-55,-69,-66,-49,-77,-73,2,2,2,]),'RIGHTPAREN':([23,26,27,28,30,32,34,48,49,56,66,67,69,70,103,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,154,160,161,165,174,175,177,178,183,186,187,194,],[-40,-74,-72,-75,-76,-71,-70,-32,-31,-80,124,125,-56,-51,-80,-39,-29,-38,-35,-28,-37,-30,-33,160,-78,-36,-26,-34,-27,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,-65,-53,-55,-69,-66,-49,173,-77,-80,-73,182,-80,-79,-41,189,190,-94,-93,]),'LSHIFT':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,75,75,75,75,-56,-51,75,75,75,75,75,75,75,75,75,75,75,75,75,-50,75,75,-68,75,75,-67,-46,75,75,75,75,-45,75,75,-48,-47,75,75,75,-55,-69,75,-49,75,-77,75,-73,75,75,]),'RSHIFT':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,72,72,72,72,-56,-51,72,72,72,72,72,72,72,72,72,72,72,72,72,-50,72,72,-68,72,72,-67,-46,72,72,72,72,-45,72,72,-48,-47,72,72,72,-55,-69,72,-49,72,-77,72,-73,72,72,]),'INTOEQ':([17,100,],[47,47,]),'MINUS':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,76,76,76,76,-56,-51,76,76,76,76,76,76,76,76,76,76,76,76,76,-50,76,76,76,76,76,76,-46,76,76,76,76,-45,76,76,-48,-47,76,76,76,-55,76,76,-49,76,-77,76,-73,76,76,]),'DOT':([14,],[41,]),'GTE':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,77,77,77,77,-56,-51,77,77,77,77,77,77,77,77,77,77,77,77,77,-50,77,77,-68,77,77,-67,-46,-62,77,77,-57,-45,77,-58,-48,-47,-61,77,77,-55,-69,77,-49,77,-77,77,-73,77,77,]),'BINAND':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,78,78,78,78,-56,-51,78,78,78,78,78,78,78,78,78,78,78,78,78,-50,78,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,78,-58,-48,-47,-61,78,78,-55,-69,78,-49,78,-77,78,-73,78,78,]),'INCR':([17,100,],[49,49,]),'XOREQ':([17,100,],[50,50,]),'LSHIFTEQ':([17,100,],[55,55,]),'SEMICOLON':([5,6,7,10,11,13,15,19,20,21,22,23,26,27,28,30,32,34,36,37,42,43,44,45,48,49,62,63,64,65,69,70,81,88,94,96,97,98,101,108,109,110,111,112,113,114,115,118,120,121,122,123,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,152,156,158,159,160,164,165,166,167,168,169,170,172,178,181,182,184,187,188,192,193,195,],[-14,-16,37,-15,39,-17,42,-18,63,64,65,-40,-74,-72,-75,-76,-71,-70,96,-8,-7,-19,-24,-25,-32,-31,-4,-9,-10,-13,-56,-51,-86,-81,-85,-11,150,151,153,-39,-29,-38,-35,-28,-37,-30,-33,-36,-26,-34,-27,-3,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,-65,-53,-55,-69,-66,-49,-24,-21,-23,-22,-77,-87,-73,-14,-15,-82,-89,180,-90,-41,-95,188,-20,191,-12,195,-88,-96,]),'BINXOR':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,83,83,83,83,-56,-51,83,83,83,83,83,83,83,83,83,83,83,83,83,-50,83,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,83,83,-55,-69,83,-49,83,-77,83,-73,83,83,]),'STREQUAL':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,79,79,79,79,-56,-51,79,79,79,79,79,79,79,79,79,79,79,79,79,-50,79,-59,-68,-60,-64,-67,-46,-62,79,-63,-57,-45,79,-58,-48,-47,-61,79,79,-55,-69,79,-49,79,-77,79,-73,79,79,]),'URSHIFTEQ':([17,100,],[51,51,]),'MINUSEQ':([17,100,],[52,52,]),'LT':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,80,80,80,80,-56,-51,80,80,80,80,80,80,80,80,80,80,80,80,80,-50,80,80,-68,80,80,-67,-46,-62,80,80,-57,-45,80,-58,-48,-47,-61,80,80,-55,-69,80,-49,80,-77,80,-73,80,80,]),'PLUS':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,82,82,82,82,-56,-51,82,82,82,82,82,82,82,82,82,82,82,82,82,-50,82,82,82,82,82,82,-46,82,82,82,82,-45,82,82,-48,-47,82,82,82,-55,82,82,-49,82,-77,82,-73,82,82,]),'DECR':([17,100,],[48,48,]),'LEFTBRACKET':([30,58,106,171,],[68,119,119,119,]),'BINOR':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,90,90,90,90,-56,-51,90,90,90,90,90,90,90,90,90,90,90,90,90,-50,90,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,90,-53,-55,-69,90,-49,90,-77,90,-73,90,90,]),'COMMA':([26,27,28,30,32,34,44,45,69,70,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,152,158,160,163,165,178,],[-74,-72,-75,-76,-71,-70,105,107,-56,-51,161,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,-65,-53,-55,-69,-66,-49,105,176,-77,179,-73,-41,]),'OREQ':([17,100,],[53,53,]),'DIVEQ':([17,100,],[54,54,]),'$end':([1,5,6,9,10,11,13,19,24,37,42,62,63,64,65,81,88,94,96,102,123,164,166,167,168,181,188,193,195,],[-2,-14,-16,0,-15,-6,-17,-18,-1,-8,-7,-4,-9,-10,-13,-86,-81,-85,-11,-5,-3,-87,-14,-15,-82,-95,-12,-88,-96,]),'FUNCTION':([0,18,26,27,28,30,32,34,35,39,69,70,106,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[12,12,-74,-72,-75,-76,-71,-70,12,12,-56,-51,157,12,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,12,-65,-53,-55,-69,-66,-49,-77,-73,12,12,12,]),'RIGHTBRACKET':([26,27,28,30,32,34,69,70,119,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,160,162,163,165,179,185,],[-74,-72,-75,-76,-71,-70,-56,-51,-44,-50,165,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,-65,-53,-55,-69,-66,-49,-77,178,-43,-73,-44,-42,]),'GT':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,84,84,84,84,-56,-51,84,84,84,84,84,84,84,84,84,84,84,84,84,-50,84,84,-68,84,84,-67,-46,-62,84,84,-57,-45,84,-58,-48,-47,-61,84,84,-55,-69,84,-49,84,-77,84,-73,84,84,]),'CONSOLE':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[14,14,-74,-72,-75,-76,-71,-70,14,14,-56,-51,14,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,14,-65,-53,-55,-69,-66,-49,-77,-73,14,14,14,]),'STRING':([3,4,25,29,31,33,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,151,155,161,171,175,179,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FOR':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[8,8,-74,-72,-75,-76,-71,-70,8,8,-56,-51,8,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,8,-65,-53,-55,-69,-66,-49,-77,-73,8,8,8,]),'INTO':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,86,86,86,86,-56,-51,86,86,86,86,86,86,86,86,86,86,86,86,86,-50,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-48,-47,86,86,86,-55,86,86,-49,86,-77,86,-73,86,86,]),'NOTEQUAL':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,73,73,73,73,-56,-51,73,73,73,73,73,73,73,73,73,73,73,73,73,-50,73,-59,-68,-60,-64,-67,-46,-62,73,-63,-57,-45,73,-58,-48,-47,-61,73,73,-55,-69,73,-49,73,-77,73,-73,73,73,]),'LEFTPAREN':([2,3,4,8,17,25,29,30,31,33,40,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,104,106,119,151,155,157,161,171,175,179,],[25,29,29,38,56,29,29,56,29,29,103,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,155,29,29,29,29,175,29,29,29,29,]),'RIGHTBRACE':([5,6,10,11,13,18,19,37,42,61,62,63,64,65,81,88,94,96,102,123,164,166,167,168,181,188,193,195,],[-14,-16,-15,-6,-17,62,-18,-8,-7,123,-4,-9,-10,-13,-86,-81,-85,-11,-5,-3,-87,-14,-15,-82,-95,-12,-88,-96,]),'ELSE':([5,6,10,13,19,37,42,62,63,64,65,81,88,94,96,123,164,166,167,168,181,188,193,195,],[-14,-16,-15,-17,-18,-8,-7,-4,-9,-10,-13,-86,143,-85,-11,-3,-87,-14,-15,-82,-95,-12,-88,-96,]),'ANDEQ':([17,100,],[57,57,]),'URSHIFT':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,92,92,92,92,-56,-51,92,92,92,92,92,92,92,92,92,92,92,92,92,-50,92,92,-68,92,92,-67,-46,92,92,92,92,-45,92,92,-48,-47,92,92,92,-55,-69,92,-49,92,-77,92,-73,92,92,]),'LTE':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,87,87,87,87,-56,-51,87,87,87,87,87,87,87,87,87,87,87,87,87,-50,87,87,-68,87,87,-67,-46,-62,87,87,-57,-45,87,-58,-48,-47,-61,87,87,-55,-69,87,-49,87,-77,87,-73,87,87,]),'VAR':([0,18,26,27,28,30,32,34,35,38,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,160,165,173,189,190,],[16,16,-74,-72,-75,-76,-71,-70,16,99,16,-56,-51,16,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,16,-65,-53,-55,-69,-66,-49,99,99,-77,-73,16,16,16,]),'EQ':([17,44,100,152,],[58,106,58,171,]),'ID':([0,3,4,12,16,18,25,26,27,28,29,30,31,32,33,34,35,38,39,46,47,50,51,52,53,54,55,56,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,99,103,105,106,107,119,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,155,160,161,165,171,173,175,176,179,180,189,190,191,],[17,30,30,40,44,17,30,-74,-72,-75,30,-76,30,-71,30,-70,17,100,17,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-56,-51,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,152,30,152,30,152,30,17,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,17,-65,-53,-55,-69,-66,-49,100,30,100,30,-77,30,-73,30,17,30,152,30,100,17,17,100,]),'IF':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[3,3,-74,-72,-75,-76,-71,-70,3,3,-56,-51,3,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,3,-65,-53,-55,-69,-66,-49,-77,-73,3,3,3,]),'AND':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,89,89,89,89,-56,-51,89,89,89,89,89,89,89,89,89,89,89,89,89,-50,89,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,-65,-53,-55,-69,89,-49,89,-77,89,-73,89,89,]),'RSHIFTEQ':([17,100,],[59,59,]),'LEFTBRACE':([0,26,27,28,30,32,34,35,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[18,-74,-72,-75,-76,-71,-70,18,-56,-51,18,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,18,-65,-53,-55,-69,-66,-49,-77,-73,18,18,18,]),'PLUSEQ':([17,100,],[60,60,]),'BREAK':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[20,20,-74,-72,-75,-76,-71,-70,20,20,-56,-51,20,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,20,-65,-53,-55,-69,-66,-49,-77,-73,20,20,20,]),'CONTINUE':([0,18,26,27,28,30,32,34,35,39,69,70,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,160,165,173,189,190,],[21,21,-74,-72,-75,-76,-71,-70,21,21,-56,-51,21,-50,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,21,-65,-53,-55,-69,-66,-49,-77,-73,21,21,21,]),'NOT':([3,4,25,29,31,33,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,151,155,161,171,175,179,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'BINNOT':([3,4,25,26,27,28,29,30,31,32,33,34,35,36,46,47,50,51,52,53,54,55,56,57,58,59,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,108,109,110,111,112,113,114,115,117,118,119,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,151,155,158,160,161,163,165,170,171,174,175,179,],[31,31,31,-74,-72,-75,31,-76,31,-71,31,-70,91,91,31,31,31,31,31,31,31,31,31,31,31,31,31,91,91,31,91,91,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,91,91,91,91,91,91,91,91,91,91,31,91,91,91,-50,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,31,31,91,-77,31,91,-73,91,31,91,31,31,]),'OR':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,93,93,93,93,-56,-51,93,93,93,93,93,93,93,93,93,93,93,93,93,-50,93,-59,-68,-60,-64,-67,-46,-62,-52,-63,-57,-45,-54,-58,-48,-47,-61,-65,-53,-55,-69,-66,-49,93,-77,93,-73,93,93,]),'MOD':([26,27,28,30,32,34,35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,158,160,163,165,170,174,],[-74,-72,-75,-76,-71,-70,95,95,95,95,-56,-51,95,95,95,95,95,95,95,95,95,95,95,95,95,-50,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-48,-47,95,95,95,-55,95,95,-49,95,-77,95,-73,95,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,18,39,],[1,61,102,]),'increment':([180,191,],[186,194,]),'if':([0,18,35,39,124,143,173,189,190,],[5,5,5,5,5,166,5,5,5,]),'whileloop':([0,18,35,39,124,143,173,189,190,],[6,6,6,6,6,6,6,6,6,]),'start':([0,],[9,]),'arrayCall':([3,4,25,29,31,33,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,151,155,161,171,175,179,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ifelse':([0,18,35,39,124,143,173,189,190,],[10,10,10,10,10,167,10,10,10,]),'statement':([0,18,35,39,124,143,173,189,190,],[11,11,81,11,81,81,81,81,81,]),'argList':([56,103,161,175,],[116,154,177,183,]),'initialization':([38,150,153,],[98,169,172,]),'arraydecl':([0,16,18,35,38,39,99,105,107,124,143,150,153,173,176,180,189,190,191,],[23,45,23,23,23,23,45,45,45,23,23,23,23,23,45,23,23,23,23,]),'forloop':([0,18,35,39,124,143,173,189,190,],[13,13,13,13,13,13,13,13,13,]),'assignment':([0,18,35,38,39,124,143,150,153,173,189,190,],[15,15,15,97,15,15,15,97,97,15,15,15,]),'arrayList':([119,179,],[162,185,]),'cblock':([35,124,143,173,189,190,],[88,164,168,181,192,193,]),'assignlist':([16,99,105,107,176,],[43,43,156,159,184,]),'funcdecl':([0,18,35,39,124,143,173,189,190,],[19,19,19,19,19,19,19,19,19,]),'reassignment':([0,18,35,38,39,124,143,150,153,173,180,189,190,191,],[7,7,7,101,7,7,7,101,101,7,187,7,7,187,]),'functioncall':([0,3,4,18,25,29,31,33,35,39,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,124,143,151,155,161,171,173,175,179,189,190,],[22,32,32,22,32,32,32,32,22,22,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,22,22,32,32,32,32,22,32,32,22,22,]),'expression':([3,4,25,29,31,33,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,151,155,161,171,175,179,],[35,36,66,67,69,70,108,109,110,111,112,113,114,115,117,118,120,121,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,117,158,163,170,174,117,158,117,163,]),'block':([0,35,124,143,173,189,190,],[24,94,94,94,94,94,94,]),'basicTypes':([3,4,25,29,31,33,46,47,50,51,52,53,54,55,56,57,58,59,60,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,92,93,95,103,106,119,151,155,161,171,175,179,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> block','start',1,'p_start','Parser.py',7),
  ('start -> statements','start',1,'p_start','Parser.py',8),
  ('block -> LEFTBRACE statements RIGHTBRACE','block',3,'p_block','Parser.py',12),
  ('block -> LEFTBRACE RIGHTBRACE','block',2,'p_block','Parser.py',13),
  ('statements -> statement SEMICOLON statements','statements',3,'p_statements','Parser.py',17),
  ('statements -> statement','statements',1,'p_statements','Parser.py',18),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement_semicolon','Parser.py',22),
  ('statement -> reassignment SEMICOLON','statement',2,'p_statement_semicolon','Parser.py',23),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement_semicolon','Parser.py',24),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement_semicolon','Parser.py',25),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement_semicolon','Parser.py',26),
  ('statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON','statement',7,'p_statement_semicolon','Parser.py',27),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement_semicolon','Parser.py',28),
  ('statement -> if','statement',1,'p_statement_semicolon','Parser.py',29),
  ('statement -> ifelse','statement',1,'p_statement_semicolon','Parser.py',30),
  ('statement -> whileloop','statement',1,'p_statement_semicolon','Parser.py',31),
  ('statement -> forloop','statement',1,'p_statement_semicolon','Parser.py',32),
  ('statement -> funcdecl','statement',1,'p_statement_semicolon','Parser.py',33),
  ('assignment -> VAR assignlist','assignment',2,'p_assignment','Parser.py',37),
  ('assignlist -> ID EQ expression COMMA assignlist','assignlist',5,'p_assignlist','Parser.py',41),
  ('assignlist -> ID COMMA assignlist','assignlist',3,'p_assignlist','Parser.py',42),
  ('assignlist -> arraydecl COMMA assignlist','assignlist',3,'p_assignlist','Parser.py',43),
  ('assignlist -> ID EQ expression','assignlist',3,'p_assignlist','Parser.py',44),
  ('assignlist -> ID','assignlist',1,'p_assignlist','Parser.py',45),
  ('assignlist -> arraydecl','assignlist',1,'p_assignlist','Parser.py',46),
  ('reassignment -> ID EQ expression','reassignment',3,'p_reassignment','Parser.py',51),
  ('reassignment -> ID PLUSEQ expression','reassignment',3,'p_reassignment','Parser.py',52),
  ('reassignment -> ID MINUSEQ expression','reassignment',3,'p_reassignment','Parser.py',53),
  ('reassignment -> ID INTOEQ expression','reassignment',3,'p_reassignment','Parser.py',54),
  ('reassignment -> ID DIVEQ expression','reassignment',3,'p_reassignment','Parser.py',55),
  ('reassignment -> ID INCR','reassignment',2,'p_reassignment','Parser.py',56),
  ('reassignment -> ID DECR','reassignment',2,'p_reassignment','Parser.py',57),
  ('reassignment -> ID LSHIFTEQ expression','reassignment',3,'p_reassignment','Parser.py',58),
  ('reassignment -> ID RSHIFTEQ expression','reassignment',3,'p_reassignment','Parser.py',59),
  ('reassignment -> ID URSHIFTEQ expression','reassignment',3,'p_reassignment','Parser.py',60),
  ('reassignment -> ID ANDEQ expression','reassignment',3,'p_reassignment','Parser.py',61),
  ('reassignment -> ID OREQ expression','reassignment',3,'p_reassignment','Parser.py',62),
  ('reassignment -> ID XOREQ expression','reassignment',3,'p_reassignment','Parser.py',63),
  ('reassignment -> ID MODEQ expression','reassignment',3,'p_reassignment','Parser.py',64),
  ('reassignment -> arraydecl','reassignment',1,'p_reassignment','Parser.py',65),
  ('arraydecl -> ID EQ LEFTBRACKET arrayList RIGHTBRACKET','arraydecl',5,'p_arraydecl','Parser.py',69),
  ('arrayList -> expression COMMA arrayList','arrayList',3,'p_arrayList','Parser.py',72),
  ('arrayList -> expression','arrayList',1,'p_arrayList','Parser.py',73),
  ('arrayList -> <empty>','arrayList',0,'p_arrayList','Parser.py',74),
  ('expression -> expression PLUS expression','expression',3,'p_expression_op','Parser.py',92),
  ('expression -> expression MINUS expression','expression',3,'p_expression_op','Parser.py',93),
  ('expression -> expression INTO expression','expression',3,'p_expression_op','Parser.py',94),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_op','Parser.py',95),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','Parser.py',96),
  ('expression -> LEFTPAREN expression RIGHTPAREN','expression',3,'p_groupExp','Parser.py',100),
  ('expression -> NOT expression','expression',2,'p_groupExp','Parser.py',101),
  ('expression -> expression BINAND expression','expression',3,'p_expression_binop','Parser.py',105),
  ('expression -> expression BINOR expression','expression',3,'p_expression_binop','Parser.py',106),
  ('expression -> expression BINXOR expression','expression',3,'p_expression_binop','Parser.py',107),
  ('expression -> expression BINNOT expression','expression',3,'p_expression_binop','Parser.py',108),
  ('expression -> BINNOT expression','expression',2,'p_expression_binop','Parser.py',109),
  ('expression -> expression LT expression','expression',3,'p_expression_relop','Parser.py',113),
  ('expression -> expression GT expression','expression',3,'p_expression_relop','Parser.py',114),
  ('expression -> expression DOUBLEEQ expression','expression',3,'p_expression_relop','Parser.py',115),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_relop','Parser.py',116),
  ('expression -> expression LTE expression','expression',3,'p_expression_relop','Parser.py',117),
  ('expression -> expression GTE expression','expression',3,'p_expression_relop','Parser.py',118),
  ('expression -> expression STREQUAL expression','expression',3,'p_expression_relop','Parser.py',119),
  ('expression -> expression STRNEQUAL expression','expression',3,'p_expression_relop','Parser.py',120),
  ('expression -> expression AND expression','expression',3,'p_expression_relop','Parser.py',121),
  ('expression -> expression OR expression','expression',3,'p_expression_relop','Parser.py',122),
  ('expression -> expression LSHIFT expression','expression',3,'p_expression_shift','Parser.py',126),
  ('expression -> expression RSHIFT expression','expression',3,'p_expression_shift','Parser.py',127),
  ('expression -> expression URSHIFT expression','expression',3,'p_expression_shift','Parser.py',128),
  ('expression -> basicTypes','expression',1,'p_expression','Parser.py',133),
  ('expression -> functioncall','expression',1,'p_expression','Parser.py',134),
  ('expression -> arrayCall','expression',1,'p_expression','Parser.py',135),
  ('arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET','arrayCall',4,'p_arrayCall','Parser.py',139),
  ('basicTypes -> NUMBER','basicTypes',1,'p_basicTypes','Parser.py',143),
  ('basicTypes -> STRING','basicTypes',1,'p_basicTypes','Parser.py',144),
  ('basicTypes -> ID','basicTypes',1,'p_basicTypes','Parser.py',145),
  ('functioncall -> ID LEFTPAREN argList RIGHTPAREN','functioncall',4,'p_functioncall','Parser.py',149),
  ('argList -> expression','argList',1,'p_argList','Parser.py',152),
  ('argList -> expression COMMA argList','argList',3,'p_argList','Parser.py',153),
  ('argList -> <empty>','argList',0,'p_argList','Parser.py',154),
  ('if -> IF expression cblock','if',3,'p_if','Parser.py',158),
  ('ifelse -> IF expression cblock ELSE cblock','ifelse',5,'p_ifelse','Parser.py',162),
  ('ifelse -> IF expression cblock ELSE if','ifelse',5,'p_ifelse','Parser.py',163),
  ('ifelse -> IF expression cblock ELSE ifelse','ifelse',5,'p_ifelse','Parser.py',164),
  ('cblock -> block','cblock',1,'p_cblock','Parser.py',168),
  ('cblock -> statement','cblock',1,'p_cblock','Parser.py',169),
  ('whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock','whileloop',5,'p_whileloop','Parser.py',173),
  ('forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock','forloop',9,'p_forloop','Parser.py',177),
  ('initialization -> assignment SEMICOLON initialization','initialization',3,'p_initialization','Parser.py',181),
  ('initialization -> reassignment SEMICOLON initialization','initialization',3,'p_initialization','Parser.py',182),
  ('initialization -> assignment','initialization',1,'p_initialization','Parser.py',183),
  ('initialization -> reassignment','initialization',1,'p_initialization','Parser.py',184),
  ('increment -> reassignment SEMICOLON increment','increment',3,'p_increment','Parser.py',188),
  ('increment -> reassignment','increment',1,'p_increment','Parser.py',189),
  ('funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock','funcdecl',6,'p_funcdecl','Parser.py',193),
  ('funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON','funcdecl',9,'p_funcdecl','Parser.py',194),
]
