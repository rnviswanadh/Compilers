Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    VOID
    WITH
    IMPORT
    DEBUGGER
    EXTENDS
    EVAL
    THIS
    TYPEOF
    DELETE
    LCOMMENT
    SETPROP
    COLON
    GETP
    CASE
    TRY
    DEFAULT
    NEW
    SWITCH
    SETP
    CATCH
    INSTANCEOF
    GETPROP
    CONDOP
    DO
    CONST
    EXPORT
    CLASS
    REGEX
    YIELD
    FINALLY
    IN
    BCOMMENT
    ALERT
    SUPER
    THROW

Grammar

Rule 0     S' -> start
Rule 1     start -> block
Rule 2     start -> statements
Rule 3     block -> LEFTBRACE statements RIGHTBRACE
Rule 4     block -> LEFTBRACE RIGHTBRACE
Rule 5     statements -> statement SEMICOLON statements
Rule 6     statements -> statement
Rule 7     statement -> assignment SEMICOLON
Rule 8     statement -> reassignment SEMICOLON
Rule 9     statement -> BREAK SEMICOLON
Rule 10    statement -> CONTINUE SEMICOLON
Rule 11    statement -> RETURN expression SEMICOLON
Rule 12    statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
Rule 13    statement -> functioncall SEMICOLON
Rule 14    statement -> if
Rule 15    statement -> ifelse
Rule 16    statement -> whileloop
Rule 17    statement -> forloop
Rule 18    statement -> funcdecl
Rule 19    assignment -> VAR assignlist
Rule 20    assignlist -> ID EQ expression COMMA assignlist
Rule 21    assignlist -> ID COMMA assignlist
Rule 22    assignlist -> arraydecl COMMA assignlist
Rule 23    assignlist -> ID EQ expression
Rule 24    assignlist -> ID
Rule 25    assignlist -> arraydecl
Rule 26    reassignment -> ID EQ expression
Rule 27    reassignment -> ID PLUSEQ expression
Rule 28    reassignment -> ID MINUSEQ expression
Rule 29    reassignment -> ID INTOEQ expression
Rule 30    reassignment -> ID DIVEQ expression
Rule 31    reassignment -> ID INCR
Rule 32    reassignment -> ID DECR
Rule 33    reassignment -> ID LSHIFTEQ expression
Rule 34    reassignment -> ID RSHIFTEQ expression
Rule 35    reassignment -> ID URSHIFTEQ expression
Rule 36    reassignment -> ID ANDEQ expression
Rule 37    reassignment -> ID OREQ expression
Rule 38    reassignment -> ID XOREQ expression
Rule 39    reassignment -> ID MODEQ expression
Rule 40    reassignment -> arraydecl
Rule 41    arraydecl -> ID EQ LEFTBRACKET arrayList RIGHTBRACKET
Rule 42    arrayList -> expression COMMA arrayList
Rule 43    arrayList -> expression
Rule 44    arrayList -> <empty>
Rule 45    expression -> expression PLUS expression
Rule 46    expression -> expression MINUS expression
Rule 47    expression -> expression INTO expression
Rule 48    expression -> expression DIVIDE expression
Rule 49    expression -> expression MOD expression
Rule 50    expression -> LEFTPAREN expression RIGHTPAREN
Rule 51    expression -> NOT expression
Rule 52    expression -> expression BINAND expression
Rule 53    expression -> expression BINOR expression
Rule 54    expression -> expression BINXOR expression
Rule 55    expression -> expression BINNOT expression
Rule 56    expression -> BINNOT expression
Rule 57    expression -> expression LT expression
Rule 58    expression -> expression GT expression
Rule 59    expression -> expression DOUBLEEQ expression
Rule 60    expression -> expression NOTEQUAL expression
Rule 61    expression -> expression LTE expression
Rule 62    expression -> expression GTE expression
Rule 63    expression -> expression STREQUAL expression
Rule 64    expression -> expression STRNEQUAL expression
Rule 65    expression -> expression AND expression
Rule 66    expression -> expression OR expression
Rule 67    expression -> expression LSHIFT expression
Rule 68    expression -> expression RSHIFT expression
Rule 69    expression -> expression URSHIFT expression
Rule 70    expression -> basicTypes
Rule 71    expression -> functioncall
Rule 72    expression -> arrayCall
Rule 73    arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET
Rule 74    basicTypes -> NUMBER
Rule 75    basicTypes -> STRING
Rule 76    basicTypes -> ID
Rule 77    functioncall -> ID LEFTPAREN argList RIGHTPAREN
Rule 78    argList -> expression
Rule 79    argList -> expression COMMA argList
Rule 80    argList -> <empty>
Rule 81    if -> IF expression cblock
Rule 82    ifelse -> IF expression cblock ELSE cblock
Rule 83    ifelse -> IF expression cblock ELSE if
Rule 84    ifelse -> IF expression cblock ELSE ifelse
Rule 85    cblock -> block
Rule 86    cblock -> statement
Rule 87    whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock
Rule 88    forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
Rule 89    initialization -> assignment SEMICOLON initialization
Rule 90    initialization -> reassignment SEMICOLON initialization
Rule 91    initialization -> assignment
Rule 92    initialization -> reassignment
Rule 93    increment -> reassignment SEMICOLON increment
Rule 94    increment -> reassignment
Rule 95    funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
Rule 96    funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON

Terminals, with rules where they appear

ALERT                : 
AND                  : 65
ANDEQ                : 36
BCOMMENT             : 
BINAND               : 52
BINNOT               : 55 56
BINOR                : 53
BINXOR               : 54
BREAK                : 9
CASE                 : 
CATCH                : 
CLASS                : 
COLON                : 
COMMA                : 20 21 22 42 79
CONDOP               : 
CONSOLE              : 12
CONST                : 
CONTINUE             : 10
DEBUGGER             : 
DECR                 : 32
DEFAULT              : 
DELETE               : 
DIVEQ                : 30
DIVIDE               : 48
DO                   : 
DOT                  : 12
DOUBLEEQ             : 59
ELSE                 : 82 83 84
EQ                   : 20 23 26 41 96
EVAL                 : 
EXPORT               : 
EXTENDS              : 
FINALLY              : 
FOR                  : 88
FUNCTION             : 95 96
GETP                 : 
GETPROP              : 
GT                   : 58
GTE                  : 62
ID                   : 20 21 23 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 73 76 77 95 96
IF                   : 81 82 83 84
IMPORT               : 
IN                   : 
INCR                 : 31
INSTANCEOF           : 
INTO                 : 47
INTOEQ               : 29
LCOMMENT             : 
LEFTBRACE            : 3 4
LEFTBRACKET          : 41 73
LEFTPAREN            : 12 50 77 87 88 95 96
LOG                  : 12
LSHIFT               : 67
LSHIFTEQ             : 33
LT                   : 57
LTE                  : 61
MINUS                : 46
MINUSEQ              : 28
MOD                  : 49
MODEQ                : 39
NEW                  : 
NOT                  : 51
NOTEQUAL             : 60
NUMBER               : 74
OR                   : 66
OREQ                 : 37
PLUS                 : 45
PLUSEQ               : 27
REGEX                : 
RETURN               : 11
RIGHTBRACE           : 3 4
RIGHTBRACKET         : 41 73
RIGHTPAREN           : 12 50 77 87 88 95 96
RSHIFT               : 68
RSHIFTEQ             : 34
SEMICOLON            : 5 7 8 9 10 11 12 13 88 88 89 90 93 96
SETP                 : 
SETPROP              : 
STREQUAL             : 63
STRING               : 75
STRNEQUAL            : 64
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TRY                  : 
TYPEOF               : 
URSHIFT              : 69
URSHIFTEQ            : 35
VAR                  : 19 96
VOID                 : 
WHILE                : 87
WITH                 : 
XOREQ                : 38
YIELD                : 
error                : 

Nonterminals, with rules where they appear

argList              : 77 79 95 96
arrayCall            : 72
arrayList            : 41 42
arraydecl            : 22 25 40
assignlist           : 19 20 21 22
assignment           : 7 89 91
basicTypes           : 70
block                : 1 85
cblock               : 81 82 82 83 84 87 88 95 96
expression           : 11 12 20 23 26 27 28 29 30 33 34 35 36 37 38 39 42 43 45 45 46 46 47 47 48 48 49 49 50 51 52 52 53 53 54 54 55 55 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 73 78 79 81 82 83 84 87 88
forloop              : 17
funcdecl             : 18
functioncall         : 13 71
if                   : 14 83
ifelse               : 15 84
increment            : 88 93
initialization       : 88 89 90
reassignment         : 8 90 92 93 94
start                : 0
statement            : 5 6 86
statements           : 2 3 5
whileloop            : 16

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . block
    (2) start -> . statements
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (5) statements -> . statement SEMICOLON statements
    (6) statements -> . statement
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    statements                     shift and go to state 1
    assignment                     shift and go to state 15
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    start                          shift and go to state 9
    functioncall                   shift and go to state 22
    arraydecl                      shift and go to state 23
    statement                      shift and go to state 11
    ifelse                         shift and go to state 10
    block                          shift and go to state 24
    if                             shift and go to state 5

state 1

    (2) start -> statements .

    $end            reduce using rule 2 (start -> statements .)


state 2

    (87) whileloop -> WHILE . LEFTPAREN expression RIGHTPAREN cblock

    LEFTPAREN       shift and go to state 25


state 3

    (81) if -> IF . expression cblock
    (82) ifelse -> IF . expression cblock ELSE cblock
    (83) ifelse -> IF . expression cblock ELSE if
    (84) ifelse -> IF . expression cblock ELSE ifelse
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    expression                     shift and go to state 35
    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    basicTypes                     shift and go to state 34

state 4

    (11) statement -> RETURN . expression SEMICOLON
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 36
    basicTypes                     shift and go to state 34

state 5

    (14) statement -> if .

    SEMICOLON       reduce using rule 14 (statement -> if .)
    $end            reduce using rule 14 (statement -> if .)
    RIGHTBRACE      reduce using rule 14 (statement -> if .)
    ELSE            reduce using rule 14 (statement -> if .)


state 6

    (16) statement -> whileloop .

    SEMICOLON       reduce using rule 16 (statement -> whileloop .)
    $end            reduce using rule 16 (statement -> whileloop .)
    RIGHTBRACE      reduce using rule 16 (statement -> whileloop .)
    ELSE            reduce using rule 16 (statement -> whileloop .)


state 7

    (8) statement -> reassignment . SEMICOLON

    SEMICOLON       shift and go to state 37


state 8

    (88) forloop -> FOR . LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock

    LEFTPAREN       shift and go to state 38


state 9

    (0) S' -> start .



state 10

    (15) statement -> ifelse .

    SEMICOLON       reduce using rule 15 (statement -> ifelse .)
    $end            reduce using rule 15 (statement -> ifelse .)
    RIGHTBRACE      reduce using rule 15 (statement -> ifelse .)
    ELSE            reduce using rule 15 (statement -> ifelse .)


state 11

    (5) statements -> statement . SEMICOLON statements
    (6) statements -> statement .

    SEMICOLON       shift and go to state 39
    $end            reduce using rule 6 (statements -> statement .)
    RIGHTBRACE      reduce using rule 6 (statements -> statement .)


state 12

    (95) funcdecl -> FUNCTION . ID LEFTPAREN argList RIGHTPAREN cblock

    ID              shift and go to state 40


state 13

    (17) statement -> forloop .

    SEMICOLON       reduce using rule 17 (statement -> forloop .)
    $end            reduce using rule 17 (statement -> forloop .)
    RIGHTBRACE      reduce using rule 17 (statement -> forloop .)
    ELSE            reduce using rule 17 (statement -> forloop .)


state 14

    (12) statement -> CONSOLE . DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON

    DOT             shift and go to state 41


state 15

    (7) statement -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 42


state 16

    (19) assignment -> VAR . assignlist
    (96) funcdecl -> VAR . ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (20) assignlist -> . ID EQ expression COMMA assignlist
    (21) assignlist -> . ID COMMA assignlist
    (22) assignlist -> . arraydecl COMMA assignlist
    (23) assignlist -> . ID EQ expression
    (24) assignlist -> . ID
    (25) assignlist -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 44

    assignlist                     shift and go to state 43
    arraydecl                      shift and go to state 45

state 17

    (26) reassignment -> ID . EQ expression
    (27) reassignment -> ID . PLUSEQ expression
    (28) reassignment -> ID . MINUSEQ expression
    (29) reassignment -> ID . INTOEQ expression
    (30) reassignment -> ID . DIVEQ expression
    (31) reassignment -> ID . INCR
    (32) reassignment -> ID . DECR
    (33) reassignment -> ID . LSHIFTEQ expression
    (34) reassignment -> ID . RSHIFTEQ expression
    (35) reassignment -> ID . URSHIFTEQ expression
    (36) reassignment -> ID . ANDEQ expression
    (37) reassignment -> ID . OREQ expression
    (38) reassignment -> ID . XOREQ expression
    (39) reassignment -> ID . MODEQ expression
    (77) functioncall -> ID . LEFTPAREN argList RIGHTPAREN
    (41) arraydecl -> ID . EQ LEFTBRACKET arrayList RIGHTBRACKET

    EQ              shift and go to state 58
    PLUSEQ          shift and go to state 60
    MINUSEQ         shift and go to state 52
    INTOEQ          shift and go to state 47
    DIVEQ           shift and go to state 54
    INCR            shift and go to state 49
    DECR            shift and go to state 48
    LSHIFTEQ        shift and go to state 55
    RSHIFTEQ        shift and go to state 59
    URSHIFTEQ       shift and go to state 51
    ANDEQ           shift and go to state 57
    OREQ            shift and go to state 53
    XOREQ           shift and go to state 50
    MODEQ           shift and go to state 46
    LEFTPAREN       shift and go to state 56


state 18

    (3) block -> LEFTBRACE . statements RIGHTBRACE
    (4) block -> LEFTBRACE . RIGHTBRACE
    (5) statements -> . statement SEMICOLON statements
    (6) statements -> . statement
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    RIGHTBRACE      shift and go to state 62
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    statements                     shift and go to state 61
    assignment                     shift and go to state 15
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    functioncall                   shift and go to state 22
    statement                      shift and go to state 11
    ifelse                         shift and go to state 10
    arraydecl                      shift and go to state 23
    if                             shift and go to state 5

state 19

    (18) statement -> funcdecl .

    SEMICOLON       reduce using rule 18 (statement -> funcdecl .)
    $end            reduce using rule 18 (statement -> funcdecl .)
    RIGHTBRACE      reduce using rule 18 (statement -> funcdecl .)
    ELSE            reduce using rule 18 (statement -> funcdecl .)


state 20

    (9) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 63


state 21

    (10) statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 64


state 22

    (13) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 65


state 23

    (40) reassignment -> arraydecl .

    SEMICOLON       reduce using rule 40 (reassignment -> arraydecl .)
    RIGHTPAREN      reduce using rule 40 (reassignment -> arraydecl .)


state 24

    (1) start -> block .

    $end            reduce using rule 1 (start -> block .)


state 25

    (87) whileloop -> WHILE LEFTPAREN . expression RIGHTPAREN cblock
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    expression                     shift and go to state 66
    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    basicTypes                     shift and go to state 34

state 26

    (74) basicTypes -> NUMBER .

    PLUS            reduce using rule 74 (basicTypes -> NUMBER .)
    MINUS           reduce using rule 74 (basicTypes -> NUMBER .)
    INTO            reduce using rule 74 (basicTypes -> NUMBER .)
    DIVIDE          reduce using rule 74 (basicTypes -> NUMBER .)
    MOD             reduce using rule 74 (basicTypes -> NUMBER .)
    BINAND          reduce using rule 74 (basicTypes -> NUMBER .)
    BINOR           reduce using rule 74 (basicTypes -> NUMBER .)
    BINXOR          reduce using rule 74 (basicTypes -> NUMBER .)
    BINNOT          reduce using rule 74 (basicTypes -> NUMBER .)
    LT              reduce using rule 74 (basicTypes -> NUMBER .)
    GT              reduce using rule 74 (basicTypes -> NUMBER .)
    DOUBLEEQ        reduce using rule 74 (basicTypes -> NUMBER .)
    NOTEQUAL        reduce using rule 74 (basicTypes -> NUMBER .)
    LTE             reduce using rule 74 (basicTypes -> NUMBER .)
    GTE             reduce using rule 74 (basicTypes -> NUMBER .)
    STREQUAL        reduce using rule 74 (basicTypes -> NUMBER .)
    STRNEQUAL       reduce using rule 74 (basicTypes -> NUMBER .)
    AND             reduce using rule 74 (basicTypes -> NUMBER .)
    OR              reduce using rule 74 (basicTypes -> NUMBER .)
    LSHIFT          reduce using rule 74 (basicTypes -> NUMBER .)
    RSHIFT          reduce using rule 74 (basicTypes -> NUMBER .)
    URSHIFT         reduce using rule 74 (basicTypes -> NUMBER .)
    SEMICOLON       reduce using rule 74 (basicTypes -> NUMBER .)
    RIGHTPAREN      reduce using rule 74 (basicTypes -> NUMBER .)
    LEFTBRACE       reduce using rule 74 (basicTypes -> NUMBER .)
    BREAK           reduce using rule 74 (basicTypes -> NUMBER .)
    CONTINUE        reduce using rule 74 (basicTypes -> NUMBER .)
    RETURN          reduce using rule 74 (basicTypes -> NUMBER .)
    CONSOLE         reduce using rule 74 (basicTypes -> NUMBER .)
    VAR             reduce using rule 74 (basicTypes -> NUMBER .)
    ID              reduce using rule 74 (basicTypes -> NUMBER .)
    IF              reduce using rule 74 (basicTypes -> NUMBER .)
    WHILE           reduce using rule 74 (basicTypes -> NUMBER .)
    FOR             reduce using rule 74 (basicTypes -> NUMBER .)
    FUNCTION        reduce using rule 74 (basicTypes -> NUMBER .)
    COMMA           reduce using rule 74 (basicTypes -> NUMBER .)
    RIGHTBRACKET    reduce using rule 74 (basicTypes -> NUMBER .)


state 27

    (72) expression -> arrayCall .

    PLUS            reduce using rule 72 (expression -> arrayCall .)
    MINUS           reduce using rule 72 (expression -> arrayCall .)
    INTO            reduce using rule 72 (expression -> arrayCall .)
    DIVIDE          reduce using rule 72 (expression -> arrayCall .)
    MOD             reduce using rule 72 (expression -> arrayCall .)
    BINAND          reduce using rule 72 (expression -> arrayCall .)
    BINOR           reduce using rule 72 (expression -> arrayCall .)
    BINXOR          reduce using rule 72 (expression -> arrayCall .)
    BINNOT          reduce using rule 72 (expression -> arrayCall .)
    LT              reduce using rule 72 (expression -> arrayCall .)
    GT              reduce using rule 72 (expression -> arrayCall .)
    DOUBLEEQ        reduce using rule 72 (expression -> arrayCall .)
    NOTEQUAL        reduce using rule 72 (expression -> arrayCall .)
    LTE             reduce using rule 72 (expression -> arrayCall .)
    GTE             reduce using rule 72 (expression -> arrayCall .)
    STREQUAL        reduce using rule 72 (expression -> arrayCall .)
    STRNEQUAL       reduce using rule 72 (expression -> arrayCall .)
    AND             reduce using rule 72 (expression -> arrayCall .)
    OR              reduce using rule 72 (expression -> arrayCall .)
    LSHIFT          reduce using rule 72 (expression -> arrayCall .)
    RSHIFT          reduce using rule 72 (expression -> arrayCall .)
    URSHIFT         reduce using rule 72 (expression -> arrayCall .)
    LEFTBRACE       reduce using rule 72 (expression -> arrayCall .)
    BREAK           reduce using rule 72 (expression -> arrayCall .)
    CONTINUE        reduce using rule 72 (expression -> arrayCall .)
    RETURN          reduce using rule 72 (expression -> arrayCall .)
    CONSOLE         reduce using rule 72 (expression -> arrayCall .)
    VAR             reduce using rule 72 (expression -> arrayCall .)
    ID              reduce using rule 72 (expression -> arrayCall .)
    IF              reduce using rule 72 (expression -> arrayCall .)
    WHILE           reduce using rule 72 (expression -> arrayCall .)
    FOR             reduce using rule 72 (expression -> arrayCall .)
    FUNCTION        reduce using rule 72 (expression -> arrayCall .)
    SEMICOLON       reduce using rule 72 (expression -> arrayCall .)
    RIGHTPAREN      reduce using rule 72 (expression -> arrayCall .)
    COMMA           reduce using rule 72 (expression -> arrayCall .)
    RIGHTBRACKET    reduce using rule 72 (expression -> arrayCall .)


state 28

    (75) basicTypes -> STRING .

    PLUS            reduce using rule 75 (basicTypes -> STRING .)
    MINUS           reduce using rule 75 (basicTypes -> STRING .)
    INTO            reduce using rule 75 (basicTypes -> STRING .)
    DIVIDE          reduce using rule 75 (basicTypes -> STRING .)
    MOD             reduce using rule 75 (basicTypes -> STRING .)
    BINAND          reduce using rule 75 (basicTypes -> STRING .)
    BINOR           reduce using rule 75 (basicTypes -> STRING .)
    BINXOR          reduce using rule 75 (basicTypes -> STRING .)
    BINNOT          reduce using rule 75 (basicTypes -> STRING .)
    LT              reduce using rule 75 (basicTypes -> STRING .)
    GT              reduce using rule 75 (basicTypes -> STRING .)
    DOUBLEEQ        reduce using rule 75 (basicTypes -> STRING .)
    NOTEQUAL        reduce using rule 75 (basicTypes -> STRING .)
    LTE             reduce using rule 75 (basicTypes -> STRING .)
    GTE             reduce using rule 75 (basicTypes -> STRING .)
    STREQUAL        reduce using rule 75 (basicTypes -> STRING .)
    STRNEQUAL       reduce using rule 75 (basicTypes -> STRING .)
    AND             reduce using rule 75 (basicTypes -> STRING .)
    OR              reduce using rule 75 (basicTypes -> STRING .)
    LSHIFT          reduce using rule 75 (basicTypes -> STRING .)
    RSHIFT          reduce using rule 75 (basicTypes -> STRING .)
    URSHIFT         reduce using rule 75 (basicTypes -> STRING .)
    SEMICOLON       reduce using rule 75 (basicTypes -> STRING .)
    RIGHTPAREN      reduce using rule 75 (basicTypes -> STRING .)
    LEFTBRACE       reduce using rule 75 (basicTypes -> STRING .)
    BREAK           reduce using rule 75 (basicTypes -> STRING .)
    CONTINUE        reduce using rule 75 (basicTypes -> STRING .)
    RETURN          reduce using rule 75 (basicTypes -> STRING .)
    CONSOLE         reduce using rule 75 (basicTypes -> STRING .)
    VAR             reduce using rule 75 (basicTypes -> STRING .)
    ID              reduce using rule 75 (basicTypes -> STRING .)
    IF              reduce using rule 75 (basicTypes -> STRING .)
    WHILE           reduce using rule 75 (basicTypes -> STRING .)
    FOR             reduce using rule 75 (basicTypes -> STRING .)
    FUNCTION        reduce using rule 75 (basicTypes -> STRING .)
    COMMA           reduce using rule 75 (basicTypes -> STRING .)
    RIGHTBRACKET    reduce using rule 75 (basicTypes -> STRING .)


state 29

    (50) expression -> LEFTPAREN . expression RIGHTPAREN
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 67
    basicTypes                     shift and go to state 34

state 30

    (76) basicTypes -> ID .
    (77) functioncall -> ID . LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> ID . LEFTBRACKET expression RIGHTBRACKET

    PLUS            reduce using rule 76 (basicTypes -> ID .)
    MINUS           reduce using rule 76 (basicTypes -> ID .)
    INTO            reduce using rule 76 (basicTypes -> ID .)
    DIVIDE          reduce using rule 76 (basicTypes -> ID .)
    MOD             reduce using rule 76 (basicTypes -> ID .)
    BINAND          reduce using rule 76 (basicTypes -> ID .)
    BINOR           reduce using rule 76 (basicTypes -> ID .)
    BINXOR          reduce using rule 76 (basicTypes -> ID .)
    BINNOT          reduce using rule 76 (basicTypes -> ID .)
    LT              reduce using rule 76 (basicTypes -> ID .)
    GT              reduce using rule 76 (basicTypes -> ID .)
    DOUBLEEQ        reduce using rule 76 (basicTypes -> ID .)
    NOTEQUAL        reduce using rule 76 (basicTypes -> ID .)
    LTE             reduce using rule 76 (basicTypes -> ID .)
    GTE             reduce using rule 76 (basicTypes -> ID .)
    STREQUAL        reduce using rule 76 (basicTypes -> ID .)
    STRNEQUAL       reduce using rule 76 (basicTypes -> ID .)
    AND             reduce using rule 76 (basicTypes -> ID .)
    OR              reduce using rule 76 (basicTypes -> ID .)
    LSHIFT          reduce using rule 76 (basicTypes -> ID .)
    RSHIFT          reduce using rule 76 (basicTypes -> ID .)
    URSHIFT         reduce using rule 76 (basicTypes -> ID .)
    SEMICOLON       reduce using rule 76 (basicTypes -> ID .)
    RIGHTPAREN      reduce using rule 76 (basicTypes -> ID .)
    LEFTBRACE       reduce using rule 76 (basicTypes -> ID .)
    BREAK           reduce using rule 76 (basicTypes -> ID .)
    CONTINUE        reduce using rule 76 (basicTypes -> ID .)
    RETURN          reduce using rule 76 (basicTypes -> ID .)
    CONSOLE         reduce using rule 76 (basicTypes -> ID .)
    VAR             reduce using rule 76 (basicTypes -> ID .)
    ID              reduce using rule 76 (basicTypes -> ID .)
    IF              reduce using rule 76 (basicTypes -> ID .)
    WHILE           reduce using rule 76 (basicTypes -> ID .)
    FOR             reduce using rule 76 (basicTypes -> ID .)
    FUNCTION        reduce using rule 76 (basicTypes -> ID .)
    COMMA           reduce using rule 76 (basicTypes -> ID .)
    RIGHTBRACKET    reduce using rule 76 (basicTypes -> ID .)
    LEFTPAREN       shift and go to state 56
    LEFTBRACKET     shift and go to state 68


state 31

    (56) expression -> BINNOT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 69
    basicTypes                     shift and go to state 34

state 32

    (71) expression -> functioncall .

    PLUS            reduce using rule 71 (expression -> functioncall .)
    MINUS           reduce using rule 71 (expression -> functioncall .)
    INTO            reduce using rule 71 (expression -> functioncall .)
    DIVIDE          reduce using rule 71 (expression -> functioncall .)
    MOD             reduce using rule 71 (expression -> functioncall .)
    BINAND          reduce using rule 71 (expression -> functioncall .)
    BINOR           reduce using rule 71 (expression -> functioncall .)
    BINXOR          reduce using rule 71 (expression -> functioncall .)
    BINNOT          reduce using rule 71 (expression -> functioncall .)
    LT              reduce using rule 71 (expression -> functioncall .)
    GT              reduce using rule 71 (expression -> functioncall .)
    DOUBLEEQ        reduce using rule 71 (expression -> functioncall .)
    NOTEQUAL        reduce using rule 71 (expression -> functioncall .)
    LTE             reduce using rule 71 (expression -> functioncall .)
    GTE             reduce using rule 71 (expression -> functioncall .)
    STREQUAL        reduce using rule 71 (expression -> functioncall .)
    STRNEQUAL       reduce using rule 71 (expression -> functioncall .)
    AND             reduce using rule 71 (expression -> functioncall .)
    OR              reduce using rule 71 (expression -> functioncall .)
    LSHIFT          reduce using rule 71 (expression -> functioncall .)
    RSHIFT          reduce using rule 71 (expression -> functioncall .)
    URSHIFT         reduce using rule 71 (expression -> functioncall .)
    LEFTBRACE       reduce using rule 71 (expression -> functioncall .)
    BREAK           reduce using rule 71 (expression -> functioncall .)
    CONTINUE        reduce using rule 71 (expression -> functioncall .)
    RETURN          reduce using rule 71 (expression -> functioncall .)
    CONSOLE         reduce using rule 71 (expression -> functioncall .)
    VAR             reduce using rule 71 (expression -> functioncall .)
    ID              reduce using rule 71 (expression -> functioncall .)
    IF              reduce using rule 71 (expression -> functioncall .)
    WHILE           reduce using rule 71 (expression -> functioncall .)
    FOR             reduce using rule 71 (expression -> functioncall .)
    FUNCTION        reduce using rule 71 (expression -> functioncall .)
    SEMICOLON       reduce using rule 71 (expression -> functioncall .)
    RIGHTPAREN      reduce using rule 71 (expression -> functioncall .)
    COMMA           reduce using rule 71 (expression -> functioncall .)
    RIGHTBRACKET    reduce using rule 71 (expression -> functioncall .)


state 33

    (51) expression -> NOT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 70
    basicTypes                     shift and go to state 34

state 34

    (70) expression -> basicTypes .

    PLUS            reduce using rule 70 (expression -> basicTypes .)
    MINUS           reduce using rule 70 (expression -> basicTypes .)
    INTO            reduce using rule 70 (expression -> basicTypes .)
    DIVIDE          reduce using rule 70 (expression -> basicTypes .)
    MOD             reduce using rule 70 (expression -> basicTypes .)
    BINAND          reduce using rule 70 (expression -> basicTypes .)
    BINOR           reduce using rule 70 (expression -> basicTypes .)
    BINXOR          reduce using rule 70 (expression -> basicTypes .)
    BINNOT          reduce using rule 70 (expression -> basicTypes .)
    LT              reduce using rule 70 (expression -> basicTypes .)
    GT              reduce using rule 70 (expression -> basicTypes .)
    DOUBLEEQ        reduce using rule 70 (expression -> basicTypes .)
    NOTEQUAL        reduce using rule 70 (expression -> basicTypes .)
    LTE             reduce using rule 70 (expression -> basicTypes .)
    GTE             reduce using rule 70 (expression -> basicTypes .)
    STREQUAL        reduce using rule 70 (expression -> basicTypes .)
    STRNEQUAL       reduce using rule 70 (expression -> basicTypes .)
    AND             reduce using rule 70 (expression -> basicTypes .)
    OR              reduce using rule 70 (expression -> basicTypes .)
    LSHIFT          reduce using rule 70 (expression -> basicTypes .)
    RSHIFT          reduce using rule 70 (expression -> basicTypes .)
    URSHIFT         reduce using rule 70 (expression -> basicTypes .)
    LEFTBRACE       reduce using rule 70 (expression -> basicTypes .)
    BREAK           reduce using rule 70 (expression -> basicTypes .)
    CONTINUE        reduce using rule 70 (expression -> basicTypes .)
    RETURN          reduce using rule 70 (expression -> basicTypes .)
    CONSOLE         reduce using rule 70 (expression -> basicTypes .)
    VAR             reduce using rule 70 (expression -> basicTypes .)
    ID              reduce using rule 70 (expression -> basicTypes .)
    IF              reduce using rule 70 (expression -> basicTypes .)
    WHILE           reduce using rule 70 (expression -> basicTypes .)
    FOR             reduce using rule 70 (expression -> basicTypes .)
    FUNCTION        reduce using rule 70 (expression -> basicTypes .)
    SEMICOLON       reduce using rule 70 (expression -> basicTypes .)
    RIGHTPAREN      reduce using rule 70 (expression -> basicTypes .)
    COMMA           reduce using rule 70 (expression -> basicTypes .)
    RIGHTBRACKET    reduce using rule 70 (expression -> basicTypes .)


state 35

    (81) if -> IF expression . cblock
    (82) ifelse -> IF expression . cblock ELSE cblock
    (83) ifelse -> IF expression . cblock ELSE if
    (84) ifelse -> IF expression . cblock ELSE ifelse
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression
    (85) cblock -> . block
    (86) cblock -> . statement
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92
    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    ifelse                         shift and go to state 10
    arraydecl                      shift and go to state 23
    statement                      shift and go to state 81
    assignment                     shift and go to state 15
    functioncall                   shift and go to state 22
    cblock                         shift and go to state 88
    block                          shift and go to state 94
    if                             shift and go to state 5

state 36

    (11) statement -> RETURN expression . SEMICOLON
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       shift and go to state 96
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 37

    (8) statement -> reassignment SEMICOLON .

    SEMICOLON       reduce using rule 8 (statement -> reassignment SEMICOLON .)
    $end            reduce using rule 8 (statement -> reassignment SEMICOLON .)
    RIGHTBRACE      reduce using rule 8 (statement -> reassignment SEMICOLON .)
    ELSE            reduce using rule 8 (statement -> reassignment SEMICOLON .)


state 38

    (88) forloop -> FOR LEFTPAREN . initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (89) initialization -> . assignment SEMICOLON initialization
    (90) initialization -> . reassignment SEMICOLON initialization
    (91) initialization -> . assignment
    (92) initialization -> . reassignment
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    VAR             shift and go to state 99
    ID              shift and go to state 100

    initialization                 shift and go to state 98
    reassignment                   shift and go to state 101
    assignment                     shift and go to state 97
    arraydecl                      shift and go to state 23

state 39

    (5) statements -> statement SEMICOLON . statements
    (5) statements -> . statement SEMICOLON statements
    (6) statements -> . statement
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    statements                     shift and go to state 102
    assignment                     shift and go to state 15
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    functioncall                   shift and go to state 22
    statement                      shift and go to state 11
    ifelse                         shift and go to state 10
    arraydecl                      shift and go to state 23
    if                             shift and go to state 5

state 40

    (95) funcdecl -> FUNCTION ID . LEFTPAREN argList RIGHTPAREN cblock

    LEFTPAREN       shift and go to state 103


state 41

    (12) statement -> CONSOLE DOT . LOG LEFTPAREN expression RIGHTPAREN SEMICOLON

    LOG             shift and go to state 104


state 42

    (7) statement -> assignment SEMICOLON .

    SEMICOLON       reduce using rule 7 (statement -> assignment SEMICOLON .)
    $end            reduce using rule 7 (statement -> assignment SEMICOLON .)
    RIGHTBRACE      reduce using rule 7 (statement -> assignment SEMICOLON .)
    ELSE            reduce using rule 7 (statement -> assignment SEMICOLON .)


state 43

    (19) assignment -> VAR assignlist .

    SEMICOLON       reduce using rule 19 (assignment -> VAR assignlist .)


state 44

    (96) funcdecl -> VAR ID . EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (20) assignlist -> ID . EQ expression COMMA assignlist
    (21) assignlist -> ID . COMMA assignlist
    (23) assignlist -> ID . EQ expression
    (24) assignlist -> ID .
    (41) arraydecl -> ID . EQ LEFTBRACKET arrayList RIGHTBRACKET

    EQ              shift and go to state 106
    COMMA           shift and go to state 105
    SEMICOLON       reduce using rule 24 (assignlist -> ID .)


state 45

    (22) assignlist -> arraydecl . COMMA assignlist
    (25) assignlist -> arraydecl .

    COMMA           shift and go to state 107
    SEMICOLON       reduce using rule 25 (assignlist -> arraydecl .)


state 46

    (39) reassignment -> ID MODEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 108
    basicTypes                     shift and go to state 34

state 47

    (29) reassignment -> ID INTOEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 109
    basicTypes                     shift and go to state 34

state 48

    (32) reassignment -> ID DECR .

    SEMICOLON       reduce using rule 32 (reassignment -> ID DECR .)
    RIGHTPAREN      reduce using rule 32 (reassignment -> ID DECR .)


state 49

    (31) reassignment -> ID INCR .

    SEMICOLON       reduce using rule 31 (reassignment -> ID INCR .)
    RIGHTPAREN      reduce using rule 31 (reassignment -> ID INCR .)


state 50

    (38) reassignment -> ID XOREQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 110
    basicTypes                     shift and go to state 34

state 51

    (35) reassignment -> ID URSHIFTEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 111
    basicTypes                     shift and go to state 34

state 52

    (28) reassignment -> ID MINUSEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 112
    basicTypes                     shift and go to state 34

state 53

    (37) reassignment -> ID OREQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 113
    basicTypes                     shift and go to state 34

state 54

    (30) reassignment -> ID DIVEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 114
    basicTypes                     shift and go to state 34

state 55

    (33) reassignment -> ID LSHIFTEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 115
    basicTypes                     shift and go to state 34

state 56

    (77) functioncall -> ID LEFTPAREN . argList RIGHTPAREN
    (78) argList -> . expression
    (79) argList -> . expression COMMA argList
    (80) argList -> .
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    RIGHTPAREN      reduce using rule 80 (argList -> .)
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    argList                        shift and go to state 116
    expression                     shift and go to state 117
    basicTypes                     shift and go to state 34

state 57

    (36) reassignment -> ID ANDEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 118
    basicTypes                     shift and go to state 34

state 58

    (26) reassignment -> ID EQ . expression
    (41) arraydecl -> ID EQ . LEFTBRACKET arrayList RIGHTBRACKET
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTBRACKET     shift and go to state 119
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    expression                     shift and go to state 120
    basicTypes                     shift and go to state 34

state 59

    (34) reassignment -> ID RSHIFTEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 121
    basicTypes                     shift and go to state 34

state 60

    (27) reassignment -> ID PLUSEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 122
    basicTypes                     shift and go to state 34

state 61

    (3) block -> LEFTBRACE statements . RIGHTBRACE

    RIGHTBRACE      shift and go to state 123


state 62

    (4) block -> LEFTBRACE RIGHTBRACE .

    ELSE            reduce using rule 4 (block -> LEFTBRACE RIGHTBRACE .)
    SEMICOLON       reduce using rule 4 (block -> LEFTBRACE RIGHTBRACE .)
    $end            reduce using rule 4 (block -> LEFTBRACE RIGHTBRACE .)
    RIGHTBRACE      reduce using rule 4 (block -> LEFTBRACE RIGHTBRACE .)


state 63

    (9) statement -> BREAK SEMICOLON .

    SEMICOLON       reduce using rule 9 (statement -> BREAK SEMICOLON .)
    $end            reduce using rule 9 (statement -> BREAK SEMICOLON .)
    RIGHTBRACE      reduce using rule 9 (statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 9 (statement -> BREAK SEMICOLON .)


state 64

    (10) statement -> CONTINUE SEMICOLON .

    SEMICOLON       reduce using rule 10 (statement -> CONTINUE SEMICOLON .)
    $end            reduce using rule 10 (statement -> CONTINUE SEMICOLON .)
    RIGHTBRACE      reduce using rule 10 (statement -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 10 (statement -> CONTINUE SEMICOLON .)


state 65

    (13) statement -> functioncall SEMICOLON .

    SEMICOLON       reduce using rule 13 (statement -> functioncall SEMICOLON .)
    $end            reduce using rule 13 (statement -> functioncall SEMICOLON .)
    RIGHTBRACE      reduce using rule 13 (statement -> functioncall SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> functioncall SEMICOLON .)


state 66

    (87) whileloop -> WHILE LEFTPAREN expression . RIGHTPAREN cblock
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    RIGHTPAREN      shift and go to state 124
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 67

    (50) expression -> LEFTPAREN expression . RIGHTPAREN
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    RIGHTPAREN      shift and go to state 125
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 68

    (73) arrayCall -> ID LEFTBRACKET . expression RIGHTBRACKET
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 126
    basicTypes                     shift and go to state 34

state 69

    (56) expression -> BINNOT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 56 (expression -> BINNOT expression .)
    MINUS           reduce using rule 56 (expression -> BINNOT expression .)
    INTO            reduce using rule 56 (expression -> BINNOT expression .)
    DIVIDE          reduce using rule 56 (expression -> BINNOT expression .)
    MOD             reduce using rule 56 (expression -> BINNOT expression .)
    BINAND          reduce using rule 56 (expression -> BINNOT expression .)
    BINOR           reduce using rule 56 (expression -> BINNOT expression .)
    BINXOR          reduce using rule 56 (expression -> BINNOT expression .)
    LT              reduce using rule 56 (expression -> BINNOT expression .)
    GT              reduce using rule 56 (expression -> BINNOT expression .)
    DOUBLEEQ        reduce using rule 56 (expression -> BINNOT expression .)
    NOTEQUAL        reduce using rule 56 (expression -> BINNOT expression .)
    LTE             reduce using rule 56 (expression -> BINNOT expression .)
    GTE             reduce using rule 56 (expression -> BINNOT expression .)
    STREQUAL        reduce using rule 56 (expression -> BINNOT expression .)
    STRNEQUAL       reduce using rule 56 (expression -> BINNOT expression .)
    AND             reduce using rule 56 (expression -> BINNOT expression .)
    OR              reduce using rule 56 (expression -> BINNOT expression .)
    LSHIFT          reduce using rule 56 (expression -> BINNOT expression .)
    RSHIFT          reduce using rule 56 (expression -> BINNOT expression .)
    URSHIFT         reduce using rule 56 (expression -> BINNOT expression .)
    LEFTBRACE       reduce using rule 56 (expression -> BINNOT expression .)
    BREAK           reduce using rule 56 (expression -> BINNOT expression .)
    CONTINUE        reduce using rule 56 (expression -> BINNOT expression .)
    RETURN          reduce using rule 56 (expression -> BINNOT expression .)
    CONSOLE         reduce using rule 56 (expression -> BINNOT expression .)
    VAR             reduce using rule 56 (expression -> BINNOT expression .)
    ID              reduce using rule 56 (expression -> BINNOT expression .)
    IF              reduce using rule 56 (expression -> BINNOT expression .)
    WHILE           reduce using rule 56 (expression -> BINNOT expression .)
    FOR             reduce using rule 56 (expression -> BINNOT expression .)
    FUNCTION        reduce using rule 56 (expression -> BINNOT expression .)
    SEMICOLON       reduce using rule 56 (expression -> BINNOT expression .)
    RIGHTPAREN      reduce using rule 56 (expression -> BINNOT expression .)
    COMMA           reduce using rule 56 (expression -> BINNOT expression .)
    RIGHTBRACKET    reduce using rule 56 (expression -> BINNOT expression .)
    BINNOT          shift and go to state 91

  ! BINNOT          [ reduce using rule 56 (expression -> BINNOT expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! INTO            [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! MOD             [ shift and go to state 95 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 70

    (51) expression -> NOT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 51 (expression -> NOT expression .)
    MINUS           reduce using rule 51 (expression -> NOT expression .)
    INTO            reduce using rule 51 (expression -> NOT expression .)
    DIVIDE          reduce using rule 51 (expression -> NOT expression .)
    MOD             reduce using rule 51 (expression -> NOT expression .)
    BINAND          reduce using rule 51 (expression -> NOT expression .)
    BINOR           reduce using rule 51 (expression -> NOT expression .)
    BINXOR          reduce using rule 51 (expression -> NOT expression .)
    LT              reduce using rule 51 (expression -> NOT expression .)
    GT              reduce using rule 51 (expression -> NOT expression .)
    DOUBLEEQ        reduce using rule 51 (expression -> NOT expression .)
    NOTEQUAL        reduce using rule 51 (expression -> NOT expression .)
    LTE             reduce using rule 51 (expression -> NOT expression .)
    GTE             reduce using rule 51 (expression -> NOT expression .)
    STREQUAL        reduce using rule 51 (expression -> NOT expression .)
    STRNEQUAL       reduce using rule 51 (expression -> NOT expression .)
    AND             reduce using rule 51 (expression -> NOT expression .)
    OR              reduce using rule 51 (expression -> NOT expression .)
    LSHIFT          reduce using rule 51 (expression -> NOT expression .)
    RSHIFT          reduce using rule 51 (expression -> NOT expression .)
    URSHIFT         reduce using rule 51 (expression -> NOT expression .)
    LEFTBRACE       reduce using rule 51 (expression -> NOT expression .)
    BREAK           reduce using rule 51 (expression -> NOT expression .)
    CONTINUE        reduce using rule 51 (expression -> NOT expression .)
    RETURN          reduce using rule 51 (expression -> NOT expression .)
    CONSOLE         reduce using rule 51 (expression -> NOT expression .)
    VAR             reduce using rule 51 (expression -> NOT expression .)
    ID              reduce using rule 51 (expression -> NOT expression .)
    IF              reduce using rule 51 (expression -> NOT expression .)
    WHILE           reduce using rule 51 (expression -> NOT expression .)
    FOR             reduce using rule 51 (expression -> NOT expression .)
    FUNCTION        reduce using rule 51 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 51 (expression -> NOT expression .)
    RIGHTPAREN      reduce using rule 51 (expression -> NOT expression .)
    COMMA           reduce using rule 51 (expression -> NOT expression .)
    RIGHTBRACKET    reduce using rule 51 (expression -> NOT expression .)
    BINNOT          shift and go to state 91

  ! BINNOT          [ reduce using rule 51 (expression -> NOT expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! INTO            [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! MOD             [ shift and go to state 95 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 71

    (59) expression -> expression DOUBLEEQ . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 127
    basicTypes                     shift and go to state 34

state 72

    (68) expression -> expression RSHIFT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 128
    basicTypes                     shift and go to state 34

state 73

    (60) expression -> expression NOTEQUAL . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 129
    basicTypes                     shift and go to state 34

state 74

    (64) expression -> expression STRNEQUAL . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 130
    basicTypes                     shift and go to state 34

state 75

    (67) expression -> expression LSHIFT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 131
    basicTypes                     shift and go to state 34

state 76

    (46) expression -> expression MINUS . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 132
    basicTypes                     shift and go to state 34

state 77

    (62) expression -> expression GTE . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 133
    basicTypes                     shift and go to state 34

state 78

    (52) expression -> expression BINAND . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 134
    basicTypes                     shift and go to state 34

state 79

    (63) expression -> expression STREQUAL . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 135
    basicTypes                     shift and go to state 34

state 80

    (57) expression -> expression LT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 136
    basicTypes                     shift and go to state 34

state 81

    (86) cblock -> statement .

    ELSE            reduce using rule 86 (cblock -> statement .)
    SEMICOLON       reduce using rule 86 (cblock -> statement .)
    $end            reduce using rule 86 (cblock -> statement .)
    RIGHTBRACE      reduce using rule 86 (cblock -> statement .)


state 82

    (45) expression -> expression PLUS . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 137
    basicTypes                     shift and go to state 34

state 83

    (54) expression -> expression BINXOR . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 138
    basicTypes                     shift and go to state 34

state 84

    (58) expression -> expression GT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 139
    basicTypes                     shift and go to state 34

state 85

    (48) expression -> expression DIVIDE . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 140
    basicTypes                     shift and go to state 34

state 86

    (47) expression -> expression INTO . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 141
    basicTypes                     shift and go to state 34

state 87

    (61) expression -> expression LTE . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 142
    basicTypes                     shift and go to state 34

state 88

    (81) if -> IF expression cblock .
    (82) ifelse -> IF expression cblock . ELSE cblock
    (83) ifelse -> IF expression cblock . ELSE if
    (84) ifelse -> IF expression cblock . ELSE ifelse

  ! shift/reduce conflict for ELSE resolved as shift
    SEMICOLON       reduce using rule 81 (if -> IF expression cblock .)
    $end            reduce using rule 81 (if -> IF expression cblock .)
    RIGHTBRACE      reduce using rule 81 (if -> IF expression cblock .)
    ELSE            shift and go to state 143

  ! ELSE            [ reduce using rule 81 (if -> IF expression cblock .) ]


state 89

    (65) expression -> expression AND . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 144
    basicTypes                     shift and go to state 34

state 90

    (53) expression -> expression BINOR . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 145
    basicTypes                     shift and go to state 34

state 91

    (55) expression -> expression BINNOT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 146
    basicTypes                     shift and go to state 34

state 92

    (69) expression -> expression URSHIFT . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 147
    basicTypes                     shift and go to state 34

state 93

    (66) expression -> expression OR . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 148
    basicTypes                     shift and go to state 34

state 94

    (85) cblock -> block .

    ELSE            reduce using rule 85 (cblock -> block .)
    SEMICOLON       reduce using rule 85 (cblock -> block .)
    $end            reduce using rule 85 (cblock -> block .)
    RIGHTBRACE      reduce using rule 85 (cblock -> block .)


state 95

    (49) expression -> expression MOD . expression
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 149
    basicTypes                     shift and go to state 34

state 96

    (11) statement -> RETURN expression SEMICOLON .

    SEMICOLON       reduce using rule 11 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 11 (statement -> RETURN expression SEMICOLON .)
    RIGHTBRACE      reduce using rule 11 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 11 (statement -> RETURN expression SEMICOLON .)


state 97

    (89) initialization -> assignment . SEMICOLON initialization
    (91) initialization -> assignment .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 150

  ! SEMICOLON       [ reduce using rule 91 (initialization -> assignment .) ]


state 98

    (88) forloop -> FOR LEFTPAREN initialization . SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock

    SEMICOLON       shift and go to state 151


state 99

    (19) assignment -> VAR . assignlist
    (20) assignlist -> . ID EQ expression COMMA assignlist
    (21) assignlist -> . ID COMMA assignlist
    (22) assignlist -> . arraydecl COMMA assignlist
    (23) assignlist -> . ID EQ expression
    (24) assignlist -> . ID
    (25) assignlist -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 152

    assignlist                     shift and go to state 43
    arraydecl                      shift and go to state 45

state 100

    (26) reassignment -> ID . EQ expression
    (27) reassignment -> ID . PLUSEQ expression
    (28) reassignment -> ID . MINUSEQ expression
    (29) reassignment -> ID . INTOEQ expression
    (30) reassignment -> ID . DIVEQ expression
    (31) reassignment -> ID . INCR
    (32) reassignment -> ID . DECR
    (33) reassignment -> ID . LSHIFTEQ expression
    (34) reassignment -> ID . RSHIFTEQ expression
    (35) reassignment -> ID . URSHIFTEQ expression
    (36) reassignment -> ID . ANDEQ expression
    (37) reassignment -> ID . OREQ expression
    (38) reassignment -> ID . XOREQ expression
    (39) reassignment -> ID . MODEQ expression
    (41) arraydecl -> ID . EQ LEFTBRACKET arrayList RIGHTBRACKET

    EQ              shift and go to state 58
    PLUSEQ          shift and go to state 60
    MINUSEQ         shift and go to state 52
    INTOEQ          shift and go to state 47
    DIVEQ           shift and go to state 54
    INCR            shift and go to state 49
    DECR            shift and go to state 48
    LSHIFTEQ        shift and go to state 55
    RSHIFTEQ        shift and go to state 59
    URSHIFTEQ       shift and go to state 51
    ANDEQ           shift and go to state 57
    OREQ            shift and go to state 53
    XOREQ           shift and go to state 50
    MODEQ           shift and go to state 46


state 101

    (90) initialization -> reassignment . SEMICOLON initialization
    (92) initialization -> reassignment .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 153

  ! SEMICOLON       [ reduce using rule 92 (initialization -> reassignment .) ]


state 102

    (5) statements -> statement SEMICOLON statements .

    $end            reduce using rule 5 (statements -> statement SEMICOLON statements .)
    RIGHTBRACE      reduce using rule 5 (statements -> statement SEMICOLON statements .)


state 103

    (95) funcdecl -> FUNCTION ID LEFTPAREN . argList RIGHTPAREN cblock
    (78) argList -> . expression
    (79) argList -> . expression COMMA argList
    (80) argList -> .
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    RIGHTPAREN      reduce using rule 80 (argList -> .)
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    argList                        shift and go to state 154
    expression                     shift and go to state 117
    basicTypes                     shift and go to state 34

state 104

    (12) statement -> CONSOLE DOT LOG . LEFTPAREN expression RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 155


state 105

    (21) assignlist -> ID COMMA . assignlist
    (20) assignlist -> . ID EQ expression COMMA assignlist
    (21) assignlist -> . ID COMMA assignlist
    (22) assignlist -> . arraydecl COMMA assignlist
    (23) assignlist -> . ID EQ expression
    (24) assignlist -> . ID
    (25) assignlist -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 152

    assignlist                     shift and go to state 156
    arraydecl                      shift and go to state 45

state 106

    (96) funcdecl -> VAR ID EQ . FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (20) assignlist -> ID EQ . expression COMMA assignlist
    (23) assignlist -> ID EQ . expression
    (41) arraydecl -> ID EQ . LEFTBRACKET arrayList RIGHTBRACKET
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    FUNCTION        shift and go to state 157
    LEFTBRACKET     shift and go to state 119
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    expression                     shift and go to state 158
    basicTypes                     shift and go to state 34

state 107

    (22) assignlist -> arraydecl COMMA . assignlist
    (20) assignlist -> . ID EQ expression COMMA assignlist
    (21) assignlist -> . ID COMMA assignlist
    (22) assignlist -> . arraydecl COMMA assignlist
    (23) assignlist -> . ID EQ expression
    (24) assignlist -> . ID
    (25) assignlist -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 152

    assignlist                     shift and go to state 159
    arraydecl                      shift and go to state 45

state 108

    (39) reassignment -> ID MODEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 39 (reassignment -> ID MODEQ expression .)
    RIGHTPAREN      reduce using rule 39 (reassignment -> ID MODEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 109

    (29) reassignment -> ID INTOEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 29 (reassignment -> ID INTOEQ expression .)
    RIGHTPAREN      reduce using rule 29 (reassignment -> ID INTOEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 110

    (38) reassignment -> ID XOREQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 38 (reassignment -> ID XOREQ expression .)
    RIGHTPAREN      reduce using rule 38 (reassignment -> ID XOREQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 111

    (35) reassignment -> ID URSHIFTEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 35 (reassignment -> ID URSHIFTEQ expression .)
    RIGHTPAREN      reduce using rule 35 (reassignment -> ID URSHIFTEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 112

    (28) reassignment -> ID MINUSEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 28 (reassignment -> ID MINUSEQ expression .)
    RIGHTPAREN      reduce using rule 28 (reassignment -> ID MINUSEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 113

    (37) reassignment -> ID OREQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 37 (reassignment -> ID OREQ expression .)
    RIGHTPAREN      reduce using rule 37 (reassignment -> ID OREQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 114

    (30) reassignment -> ID DIVEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 30 (reassignment -> ID DIVEQ expression .)
    RIGHTPAREN      reduce using rule 30 (reassignment -> ID DIVEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 115

    (33) reassignment -> ID LSHIFTEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 33 (reassignment -> ID LSHIFTEQ expression .)
    RIGHTPAREN      reduce using rule 33 (reassignment -> ID LSHIFTEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 116

    (77) functioncall -> ID LEFTPAREN argList . RIGHTPAREN

    RIGHTPAREN      shift and go to state 160


state 117

    (78) argList -> expression .
    (79) argList -> expression . COMMA argList
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    RIGHTPAREN      reduce using rule 78 (argList -> expression .)
    COMMA           shift and go to state 161
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 118

    (36) reassignment -> ID ANDEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 36 (reassignment -> ID ANDEQ expression .)
    RIGHTPAREN      reduce using rule 36 (reassignment -> ID ANDEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 119

    (41) arraydecl -> ID EQ LEFTBRACKET . arrayList RIGHTBRACKET
    (42) arrayList -> . expression COMMA arrayList
    (43) arrayList -> . expression
    (44) arrayList -> .
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    RIGHTBRACKET    reduce using rule 44 (arrayList -> .)
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayList                      shift and go to state 162
    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    expression                     shift and go to state 163
    basicTypes                     shift and go to state 34

state 120

    (26) reassignment -> ID EQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 26 (reassignment -> ID EQ expression .)
    RIGHTPAREN      reduce using rule 26 (reassignment -> ID EQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 121

    (34) reassignment -> ID RSHIFTEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 34 (reassignment -> ID RSHIFTEQ expression .)
    RIGHTPAREN      reduce using rule 34 (reassignment -> ID RSHIFTEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 122

    (27) reassignment -> ID PLUSEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       reduce using rule 27 (reassignment -> ID PLUSEQ expression .)
    RIGHTPAREN      reduce using rule 27 (reassignment -> ID PLUSEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 123

    (3) block -> LEFTBRACE statements RIGHTBRACE .

    ELSE            reduce using rule 3 (block -> LEFTBRACE statements RIGHTBRACE .)
    SEMICOLON       reduce using rule 3 (block -> LEFTBRACE statements RIGHTBRACE .)
    $end            reduce using rule 3 (block -> LEFTBRACE statements RIGHTBRACE .)
    RIGHTBRACE      reduce using rule 3 (block -> LEFTBRACE statements RIGHTBRACE .)


state 124

    (87) whileloop -> WHILE LEFTPAREN expression RIGHTPAREN . cblock
    (85) cblock -> . block
    (86) cblock -> . statement
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    functioncall                   shift and go to state 22
    arraydecl                      shift and go to state 23
    statement                      shift and go to state 81
    assignment                     shift and go to state 15
    ifelse                         shift and go to state 10
    cblock                         shift and go to state 164
    block                          shift and go to state 94
    if                             shift and go to state 5

state 125

    (50) expression -> LEFTPAREN expression RIGHTPAREN .

    PLUS            reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    MINUS           reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    INTO            reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    DIVIDE          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    MOD             reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    BINAND          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    BINOR           reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    BINXOR          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    BINNOT          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    LT              reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    GT              reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    DOUBLEEQ        reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    NOTEQUAL        reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    LTE             reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    GTE             reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    STREQUAL        reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    STRNEQUAL       reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    AND             reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    OR              reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    LSHIFT          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    RSHIFT          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    URSHIFT         reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    LEFTBRACE       reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    BREAK           reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    CONTINUE        reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    RETURN          reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    CONSOLE         reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    VAR             reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    ID              reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    IF              reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    WHILE           reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    FOR             reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    FUNCTION        reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    SEMICOLON       reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    COMMA           reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 50 (expression -> LEFTPAREN expression RIGHTPAREN .)


state 126

    (73) arrayCall -> ID LEFTBRACKET expression . RIGHTBRACKET
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    RIGHTBRACKET    shift and go to state 165
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 127

    (59) expression -> expression DOUBLEEQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    BINOR           reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    BINXOR          reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    DOUBLEEQ        reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    NOTEQUAL        reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    STREQUAL        reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    STRNEQUAL       reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    AND             reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    OR              reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    LEFTBRACE       reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    BREAK           reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    CONTINUE        reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    RETURN          reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    CONSOLE         reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    VAR             reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    ID              reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    IF              reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    WHILE           reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    FOR             reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    FUNCTION        reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    RIGHTPAREN      reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    COMMA           reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    RIGHTBRACKET    reduce using rule 59 (expression -> expression DOUBLEEQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! INTO            [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! BINNOT          [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! LTE             [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! GTE             [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! LSHIFT          [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! RSHIFT          [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! URSHIFT         [ reduce using rule 59 (expression -> expression DOUBLEEQ expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 128

    (68) expression -> expression RSHIFT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 68 (expression -> expression RSHIFT expression .)
    BINOR           reduce using rule 68 (expression -> expression RSHIFT expression .)
    BINXOR          reduce using rule 68 (expression -> expression RSHIFT expression .)
    LT              reduce using rule 68 (expression -> expression RSHIFT expression .)
    GT              reduce using rule 68 (expression -> expression RSHIFT expression .)
    DOUBLEEQ        reduce using rule 68 (expression -> expression RSHIFT expression .)
    NOTEQUAL        reduce using rule 68 (expression -> expression RSHIFT expression .)
    LTE             reduce using rule 68 (expression -> expression RSHIFT expression .)
    GTE             reduce using rule 68 (expression -> expression RSHIFT expression .)
    STREQUAL        reduce using rule 68 (expression -> expression RSHIFT expression .)
    STRNEQUAL       reduce using rule 68 (expression -> expression RSHIFT expression .)
    AND             reduce using rule 68 (expression -> expression RSHIFT expression .)
    OR              reduce using rule 68 (expression -> expression RSHIFT expression .)
    LSHIFT          reduce using rule 68 (expression -> expression RSHIFT expression .)
    RSHIFT          reduce using rule 68 (expression -> expression RSHIFT expression .)
    URSHIFT         reduce using rule 68 (expression -> expression RSHIFT expression .)
    LEFTBRACE       reduce using rule 68 (expression -> expression RSHIFT expression .)
    BREAK           reduce using rule 68 (expression -> expression RSHIFT expression .)
    CONTINUE        reduce using rule 68 (expression -> expression RSHIFT expression .)
    RETURN          reduce using rule 68 (expression -> expression RSHIFT expression .)
    CONSOLE         reduce using rule 68 (expression -> expression RSHIFT expression .)
    VAR             reduce using rule 68 (expression -> expression RSHIFT expression .)
    ID              reduce using rule 68 (expression -> expression RSHIFT expression .)
    IF              reduce using rule 68 (expression -> expression RSHIFT expression .)
    WHILE           reduce using rule 68 (expression -> expression RSHIFT expression .)
    FOR             reduce using rule 68 (expression -> expression RSHIFT expression .)
    FUNCTION        reduce using rule 68 (expression -> expression RSHIFT expression .)
    SEMICOLON       reduce using rule 68 (expression -> expression RSHIFT expression .)
    RIGHTPAREN      reduce using rule 68 (expression -> expression RSHIFT expression .)
    COMMA           reduce using rule 68 (expression -> expression RSHIFT expression .)
    RIGHTBRACKET    reduce using rule 68 (expression -> expression RSHIFT expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91

  ! PLUS            [ reduce using rule 68 (expression -> expression RSHIFT expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression RSHIFT expression .) ]
  ! INTO            [ reduce using rule 68 (expression -> expression RSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> expression RSHIFT expression .) ]
  ! MOD             [ reduce using rule 68 (expression -> expression RSHIFT expression .) ]
  ! BINNOT          [ reduce using rule 68 (expression -> expression RSHIFT expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 129

    (60) expression -> expression NOTEQUAL expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    BINOR           reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    BINXOR          reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    DOUBLEEQ        reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    STREQUAL        reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    STRNEQUAL       reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    AND             reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    OR              reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    LEFTBRACE       reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    BREAK           reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    CONTINUE        reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    CONSOLE         reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    VAR             reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    ID              reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    RIGHTPAREN      reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    RIGHTBRACKET    reduce using rule 60 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! INTO            [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! BINNOT          [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! LTE             [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! GTE             [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! LSHIFT          [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! RSHIFT          [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! URSHIFT         [ reduce using rule 60 (expression -> expression NOTEQUAL expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 130

    (64) expression -> expression STRNEQUAL expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    BINOR           reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    BINXOR          reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    DOUBLEEQ        reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    NOTEQUAL        reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    STREQUAL        reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    STRNEQUAL       reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    AND             reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    OR              reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    LEFTBRACE       reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    BREAK           reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    CONTINUE        reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    RETURN          reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    CONSOLE         reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    VAR             reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    ID              reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    IF              reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    WHILE           reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    FOR             reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    FUNCTION        reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    SEMICOLON       reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    RIGHTPAREN      reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    COMMA           reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    RIGHTBRACKET    reduce using rule 64 (expression -> expression STRNEQUAL expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! INTO            [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! BINNOT          [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! LT              [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! GT              [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! LTE             [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! GTE             [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! LSHIFT          [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! RSHIFT          [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! URSHIFT         [ reduce using rule 64 (expression -> expression STRNEQUAL expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 131

    (67) expression -> expression LSHIFT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 67 (expression -> expression LSHIFT expression .)
    BINOR           reduce using rule 67 (expression -> expression LSHIFT expression .)
    BINXOR          reduce using rule 67 (expression -> expression LSHIFT expression .)
    LT              reduce using rule 67 (expression -> expression LSHIFT expression .)
    GT              reduce using rule 67 (expression -> expression LSHIFT expression .)
    DOUBLEEQ        reduce using rule 67 (expression -> expression LSHIFT expression .)
    NOTEQUAL        reduce using rule 67 (expression -> expression LSHIFT expression .)
    LTE             reduce using rule 67 (expression -> expression LSHIFT expression .)
    GTE             reduce using rule 67 (expression -> expression LSHIFT expression .)
    STREQUAL        reduce using rule 67 (expression -> expression LSHIFT expression .)
    STRNEQUAL       reduce using rule 67 (expression -> expression LSHIFT expression .)
    AND             reduce using rule 67 (expression -> expression LSHIFT expression .)
    OR              reduce using rule 67 (expression -> expression LSHIFT expression .)
    LSHIFT          reduce using rule 67 (expression -> expression LSHIFT expression .)
    RSHIFT          reduce using rule 67 (expression -> expression LSHIFT expression .)
    URSHIFT         reduce using rule 67 (expression -> expression LSHIFT expression .)
    LEFTBRACE       reduce using rule 67 (expression -> expression LSHIFT expression .)
    BREAK           reduce using rule 67 (expression -> expression LSHIFT expression .)
    CONTINUE        reduce using rule 67 (expression -> expression LSHIFT expression .)
    RETURN          reduce using rule 67 (expression -> expression LSHIFT expression .)
    CONSOLE         reduce using rule 67 (expression -> expression LSHIFT expression .)
    VAR             reduce using rule 67 (expression -> expression LSHIFT expression .)
    ID              reduce using rule 67 (expression -> expression LSHIFT expression .)
    IF              reduce using rule 67 (expression -> expression LSHIFT expression .)
    WHILE           reduce using rule 67 (expression -> expression LSHIFT expression .)
    FOR             reduce using rule 67 (expression -> expression LSHIFT expression .)
    FUNCTION        reduce using rule 67 (expression -> expression LSHIFT expression .)
    SEMICOLON       reduce using rule 67 (expression -> expression LSHIFT expression .)
    RIGHTPAREN      reduce using rule 67 (expression -> expression LSHIFT expression .)
    COMMA           reduce using rule 67 (expression -> expression LSHIFT expression .)
    RIGHTBRACKET    reduce using rule 67 (expression -> expression LSHIFT expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91

  ! PLUS            [ reduce using rule 67 (expression -> expression LSHIFT expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression LSHIFT expression .) ]
  ! INTO            [ reduce using rule 67 (expression -> expression LSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression LSHIFT expression .) ]
  ! MOD             [ reduce using rule 67 (expression -> expression LSHIFT expression .) ]
  ! BINNOT          [ reduce using rule 67 (expression -> expression LSHIFT expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 132

    (46) expression -> expression MINUS expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 46 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 46 (expression -> expression MINUS expression .)
    BINAND          reduce using rule 46 (expression -> expression MINUS expression .)
    BINOR           reduce using rule 46 (expression -> expression MINUS expression .)
    BINXOR          reduce using rule 46 (expression -> expression MINUS expression .)
    LT              reduce using rule 46 (expression -> expression MINUS expression .)
    GT              reduce using rule 46 (expression -> expression MINUS expression .)
    DOUBLEEQ        reduce using rule 46 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 46 (expression -> expression MINUS expression .)
    LTE             reduce using rule 46 (expression -> expression MINUS expression .)
    GTE             reduce using rule 46 (expression -> expression MINUS expression .)
    STREQUAL        reduce using rule 46 (expression -> expression MINUS expression .)
    STRNEQUAL       reduce using rule 46 (expression -> expression MINUS expression .)
    AND             reduce using rule 46 (expression -> expression MINUS expression .)
    OR              reduce using rule 46 (expression -> expression MINUS expression .)
    LSHIFT          reduce using rule 46 (expression -> expression MINUS expression .)
    RSHIFT          reduce using rule 46 (expression -> expression MINUS expression .)
    URSHIFT         reduce using rule 46 (expression -> expression MINUS expression .)
    LEFTBRACE       reduce using rule 46 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 46 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 46 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 46 (expression -> expression MINUS expression .)
    CONSOLE         reduce using rule 46 (expression -> expression MINUS expression .)
    VAR             reduce using rule 46 (expression -> expression MINUS expression .)
    ID              reduce using rule 46 (expression -> expression MINUS expression .)
    IF              reduce using rule 46 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 46 (expression -> expression MINUS expression .)
    FOR             reduce using rule 46 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 46 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression MINUS expression .)
    RIGHTPAREN      reduce using rule 46 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 46 (expression -> expression MINUS expression .)
    RIGHTBRACKET    reduce using rule 46 (expression -> expression MINUS expression .)
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91

  ! INTO            [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! BINNOT          [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 133

    (62) expression -> expression GTE expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 62 (expression -> expression GTE expression .)
    BINOR           reduce using rule 62 (expression -> expression GTE expression .)
    BINXOR          reduce using rule 62 (expression -> expression GTE expression .)
    LT              reduce using rule 62 (expression -> expression GTE expression .)
    GT              reduce using rule 62 (expression -> expression GTE expression .)
    DOUBLEEQ        reduce using rule 62 (expression -> expression GTE expression .)
    NOTEQUAL        reduce using rule 62 (expression -> expression GTE expression .)
    LTE             reduce using rule 62 (expression -> expression GTE expression .)
    GTE             reduce using rule 62 (expression -> expression GTE expression .)
    STREQUAL        reduce using rule 62 (expression -> expression GTE expression .)
    STRNEQUAL       reduce using rule 62 (expression -> expression GTE expression .)
    AND             reduce using rule 62 (expression -> expression GTE expression .)
    OR              reduce using rule 62 (expression -> expression GTE expression .)
    LEFTBRACE       reduce using rule 62 (expression -> expression GTE expression .)
    BREAK           reduce using rule 62 (expression -> expression GTE expression .)
    CONTINUE        reduce using rule 62 (expression -> expression GTE expression .)
    RETURN          reduce using rule 62 (expression -> expression GTE expression .)
    CONSOLE         reduce using rule 62 (expression -> expression GTE expression .)
    VAR             reduce using rule 62 (expression -> expression GTE expression .)
    ID              reduce using rule 62 (expression -> expression GTE expression .)
    IF              reduce using rule 62 (expression -> expression GTE expression .)
    WHILE           reduce using rule 62 (expression -> expression GTE expression .)
    FOR             reduce using rule 62 (expression -> expression GTE expression .)
    FUNCTION        reduce using rule 62 (expression -> expression GTE expression .)
    SEMICOLON       reduce using rule 62 (expression -> expression GTE expression .)
    RIGHTPAREN      reduce using rule 62 (expression -> expression GTE expression .)
    COMMA           reduce using rule 62 (expression -> expression GTE expression .)
    RIGHTBRACKET    reduce using rule 62 (expression -> expression GTE expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! INTO            [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! MOD             [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! BINNOT          [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! LSHIFT          [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! RSHIFT          [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! URSHIFT         [ reduce using rule 62 (expression -> expression GTE expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 134

    (52) expression -> expression BINAND expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 52 (expression -> expression BINAND expression .)
    BINOR           reduce using rule 52 (expression -> expression BINAND expression .)
    BINXOR          reduce using rule 52 (expression -> expression BINAND expression .)
    AND             reduce using rule 52 (expression -> expression BINAND expression .)
    OR              reduce using rule 52 (expression -> expression BINAND expression .)
    LEFTBRACE       reduce using rule 52 (expression -> expression BINAND expression .)
    BREAK           reduce using rule 52 (expression -> expression BINAND expression .)
    CONTINUE        reduce using rule 52 (expression -> expression BINAND expression .)
    RETURN          reduce using rule 52 (expression -> expression BINAND expression .)
    CONSOLE         reduce using rule 52 (expression -> expression BINAND expression .)
    VAR             reduce using rule 52 (expression -> expression BINAND expression .)
    ID              reduce using rule 52 (expression -> expression BINAND expression .)
    IF              reduce using rule 52 (expression -> expression BINAND expression .)
    WHILE           reduce using rule 52 (expression -> expression BINAND expression .)
    FOR             reduce using rule 52 (expression -> expression BINAND expression .)
    FUNCTION        reduce using rule 52 (expression -> expression BINAND expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression BINAND expression .)
    RIGHTPAREN      reduce using rule 52 (expression -> expression BINAND expression .)
    COMMA           reduce using rule 52 (expression -> expression BINAND expression .)
    RIGHTBRACKET    reduce using rule 52 (expression -> expression BINAND expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! INTO            [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! BINNOT          [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! DOUBLEEQ        [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! NOTEQUAL        [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! LTE             [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! GTE             [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! STREQUAL        [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! STRNEQUAL       [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! LSHIFT          [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! RSHIFT          [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! URSHIFT         [ reduce using rule 52 (expression -> expression BINAND expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 135

    (63) expression -> expression STREQUAL expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 63 (expression -> expression STREQUAL expression .)
    BINOR           reduce using rule 63 (expression -> expression STREQUAL expression .)
    BINXOR          reduce using rule 63 (expression -> expression STREQUAL expression .)
    DOUBLEEQ        reduce using rule 63 (expression -> expression STREQUAL expression .)
    NOTEQUAL        reduce using rule 63 (expression -> expression STREQUAL expression .)
    STREQUAL        reduce using rule 63 (expression -> expression STREQUAL expression .)
    STRNEQUAL       reduce using rule 63 (expression -> expression STREQUAL expression .)
    AND             reduce using rule 63 (expression -> expression STREQUAL expression .)
    OR              reduce using rule 63 (expression -> expression STREQUAL expression .)
    LEFTBRACE       reduce using rule 63 (expression -> expression STREQUAL expression .)
    BREAK           reduce using rule 63 (expression -> expression STREQUAL expression .)
    CONTINUE        reduce using rule 63 (expression -> expression STREQUAL expression .)
    RETURN          reduce using rule 63 (expression -> expression STREQUAL expression .)
    CONSOLE         reduce using rule 63 (expression -> expression STREQUAL expression .)
    VAR             reduce using rule 63 (expression -> expression STREQUAL expression .)
    ID              reduce using rule 63 (expression -> expression STREQUAL expression .)
    IF              reduce using rule 63 (expression -> expression STREQUAL expression .)
    WHILE           reduce using rule 63 (expression -> expression STREQUAL expression .)
    FOR             reduce using rule 63 (expression -> expression STREQUAL expression .)
    FUNCTION        reduce using rule 63 (expression -> expression STREQUAL expression .)
    SEMICOLON       reduce using rule 63 (expression -> expression STREQUAL expression .)
    RIGHTPAREN      reduce using rule 63 (expression -> expression STREQUAL expression .)
    COMMA           reduce using rule 63 (expression -> expression STREQUAL expression .)
    RIGHTBRACKET    reduce using rule 63 (expression -> expression STREQUAL expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! INTO            [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! BINNOT          [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! LT              [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! GT              [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! LTE             [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! GTE             [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! LSHIFT          [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! RSHIFT          [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! URSHIFT         [ reduce using rule 63 (expression -> expression STREQUAL expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 136

    (57) expression -> expression LT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 57 (expression -> expression LT expression .)
    BINOR           reduce using rule 57 (expression -> expression LT expression .)
    BINXOR          reduce using rule 57 (expression -> expression LT expression .)
    LT              reduce using rule 57 (expression -> expression LT expression .)
    GT              reduce using rule 57 (expression -> expression LT expression .)
    DOUBLEEQ        reduce using rule 57 (expression -> expression LT expression .)
    NOTEQUAL        reduce using rule 57 (expression -> expression LT expression .)
    LTE             reduce using rule 57 (expression -> expression LT expression .)
    GTE             reduce using rule 57 (expression -> expression LT expression .)
    STREQUAL        reduce using rule 57 (expression -> expression LT expression .)
    STRNEQUAL       reduce using rule 57 (expression -> expression LT expression .)
    AND             reduce using rule 57 (expression -> expression LT expression .)
    OR              reduce using rule 57 (expression -> expression LT expression .)
    LEFTBRACE       reduce using rule 57 (expression -> expression LT expression .)
    BREAK           reduce using rule 57 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 57 (expression -> expression LT expression .)
    RETURN          reduce using rule 57 (expression -> expression LT expression .)
    CONSOLE         reduce using rule 57 (expression -> expression LT expression .)
    VAR             reduce using rule 57 (expression -> expression LT expression .)
    ID              reduce using rule 57 (expression -> expression LT expression .)
    IF              reduce using rule 57 (expression -> expression LT expression .)
    WHILE           reduce using rule 57 (expression -> expression LT expression .)
    FOR             reduce using rule 57 (expression -> expression LT expression .)
    FUNCTION        reduce using rule 57 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression LT expression .)
    RIGHTPAREN      reduce using rule 57 (expression -> expression LT expression .)
    COMMA           reduce using rule 57 (expression -> expression LT expression .)
    RIGHTBRACKET    reduce using rule 57 (expression -> expression LT expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! INTO            [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! BINNOT          [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! LSHIFT          [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! RSHIFT          [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! URSHIFT         [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 137

    (45) expression -> expression PLUS expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 45 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 45 (expression -> expression PLUS expression .)
    BINAND          reduce using rule 45 (expression -> expression PLUS expression .)
    BINOR           reduce using rule 45 (expression -> expression PLUS expression .)
    BINXOR          reduce using rule 45 (expression -> expression PLUS expression .)
    LT              reduce using rule 45 (expression -> expression PLUS expression .)
    GT              reduce using rule 45 (expression -> expression PLUS expression .)
    DOUBLEEQ        reduce using rule 45 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 45 (expression -> expression PLUS expression .)
    LTE             reduce using rule 45 (expression -> expression PLUS expression .)
    GTE             reduce using rule 45 (expression -> expression PLUS expression .)
    STREQUAL        reduce using rule 45 (expression -> expression PLUS expression .)
    STRNEQUAL       reduce using rule 45 (expression -> expression PLUS expression .)
    AND             reduce using rule 45 (expression -> expression PLUS expression .)
    OR              reduce using rule 45 (expression -> expression PLUS expression .)
    LSHIFT          reduce using rule 45 (expression -> expression PLUS expression .)
    RSHIFT          reduce using rule 45 (expression -> expression PLUS expression .)
    URSHIFT         reduce using rule 45 (expression -> expression PLUS expression .)
    LEFTBRACE       reduce using rule 45 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 45 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 45 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 45 (expression -> expression PLUS expression .)
    CONSOLE         reduce using rule 45 (expression -> expression PLUS expression .)
    VAR             reduce using rule 45 (expression -> expression PLUS expression .)
    ID              reduce using rule 45 (expression -> expression PLUS expression .)
    IF              reduce using rule 45 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 45 (expression -> expression PLUS expression .)
    FOR             reduce using rule 45 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 45 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression PLUS expression .)
    RIGHTPAREN      reduce using rule 45 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 45 (expression -> expression PLUS expression .)
    RIGHTBRACKET    reduce using rule 45 (expression -> expression PLUS expression .)
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91

  ! INTO            [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! BINNOT          [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 138

    (54) expression -> expression BINXOR expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINOR           reduce using rule 54 (expression -> expression BINXOR expression .)
    BINXOR          reduce using rule 54 (expression -> expression BINXOR expression .)
    AND             reduce using rule 54 (expression -> expression BINXOR expression .)
    OR              reduce using rule 54 (expression -> expression BINXOR expression .)
    LEFTBRACE       reduce using rule 54 (expression -> expression BINXOR expression .)
    BREAK           reduce using rule 54 (expression -> expression BINXOR expression .)
    CONTINUE        reduce using rule 54 (expression -> expression BINXOR expression .)
    RETURN          reduce using rule 54 (expression -> expression BINXOR expression .)
    CONSOLE         reduce using rule 54 (expression -> expression BINXOR expression .)
    VAR             reduce using rule 54 (expression -> expression BINXOR expression .)
    ID              reduce using rule 54 (expression -> expression BINXOR expression .)
    IF              reduce using rule 54 (expression -> expression BINXOR expression .)
    WHILE           reduce using rule 54 (expression -> expression BINXOR expression .)
    FOR             reduce using rule 54 (expression -> expression BINXOR expression .)
    FUNCTION        reduce using rule 54 (expression -> expression BINXOR expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression BINXOR expression .)
    RIGHTPAREN      reduce using rule 54 (expression -> expression BINXOR expression .)
    COMMA           reduce using rule 54 (expression -> expression BINXOR expression .)
    RIGHTBRACKET    reduce using rule 54 (expression -> expression BINXOR expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! INTO            [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! BINAND          [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! BINNOT          [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! DOUBLEEQ        [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! NOTEQUAL        [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! LTE             [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! GTE             [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! STREQUAL        [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! STRNEQUAL       [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! LSHIFT          [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! RSHIFT          [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! URSHIFT         [ reduce using rule 54 (expression -> expression BINXOR expression .) ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 139

    (58) expression -> expression GT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 58 (expression -> expression GT expression .)
    BINOR           reduce using rule 58 (expression -> expression GT expression .)
    BINXOR          reduce using rule 58 (expression -> expression GT expression .)
    LT              reduce using rule 58 (expression -> expression GT expression .)
    GT              reduce using rule 58 (expression -> expression GT expression .)
    DOUBLEEQ        reduce using rule 58 (expression -> expression GT expression .)
    NOTEQUAL        reduce using rule 58 (expression -> expression GT expression .)
    LTE             reduce using rule 58 (expression -> expression GT expression .)
    GTE             reduce using rule 58 (expression -> expression GT expression .)
    STREQUAL        reduce using rule 58 (expression -> expression GT expression .)
    STRNEQUAL       reduce using rule 58 (expression -> expression GT expression .)
    AND             reduce using rule 58 (expression -> expression GT expression .)
    OR              reduce using rule 58 (expression -> expression GT expression .)
    LEFTBRACE       reduce using rule 58 (expression -> expression GT expression .)
    BREAK           reduce using rule 58 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 58 (expression -> expression GT expression .)
    RETURN          reduce using rule 58 (expression -> expression GT expression .)
    CONSOLE         reduce using rule 58 (expression -> expression GT expression .)
    VAR             reduce using rule 58 (expression -> expression GT expression .)
    ID              reduce using rule 58 (expression -> expression GT expression .)
    IF              reduce using rule 58 (expression -> expression GT expression .)
    WHILE           reduce using rule 58 (expression -> expression GT expression .)
    FOR             reduce using rule 58 (expression -> expression GT expression .)
    FUNCTION        reduce using rule 58 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression GT expression .)
    RIGHTPAREN      reduce using rule 58 (expression -> expression GT expression .)
    COMMA           reduce using rule 58 (expression -> expression GT expression .)
    RIGHTBRACKET    reduce using rule 58 (expression -> expression GT expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! INTO            [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! BINNOT          [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! LSHIFT          [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! RSHIFT          [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! URSHIFT         [ reduce using rule 58 (expression -> expression GT expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 140

    (48) expression -> expression DIVIDE expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 48 (expression -> expression DIVIDE expression .)
    INTO            reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 48 (expression -> expression DIVIDE expression .)
    BINAND          reduce using rule 48 (expression -> expression DIVIDE expression .)
    BINOR           reduce using rule 48 (expression -> expression DIVIDE expression .)
    BINXOR          reduce using rule 48 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 48 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 48 (expression -> expression DIVIDE expression .)
    DOUBLEEQ        reduce using rule 48 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 48 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 48 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 48 (expression -> expression DIVIDE expression .)
    STREQUAL        reduce using rule 48 (expression -> expression DIVIDE expression .)
    STRNEQUAL       reduce using rule 48 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 48 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 48 (expression -> expression DIVIDE expression .)
    LSHIFT          reduce using rule 48 (expression -> expression DIVIDE expression .)
    RSHIFT          reduce using rule 48 (expression -> expression DIVIDE expression .)
    URSHIFT         reduce using rule 48 (expression -> expression DIVIDE expression .)
    LEFTBRACE       reduce using rule 48 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 48 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 48 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 48 (expression -> expression DIVIDE expression .)
    CONSOLE         reduce using rule 48 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 48 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 48 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 48 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 48 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 48 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 48 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression DIVIDE expression .)
    RIGHTPAREN      reduce using rule 48 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 48 (expression -> expression DIVIDE expression .)
    RIGHTBRACKET    reduce using rule 48 (expression -> expression DIVIDE expression .)
    BINNOT          shift and go to state 91

  ! BINNOT          [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! INTO            [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! MOD             [ shift and go to state 95 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 141

    (47) expression -> expression INTO expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 47 (expression -> expression INTO expression .)
    MINUS           reduce using rule 47 (expression -> expression INTO expression .)
    INTO            reduce using rule 47 (expression -> expression INTO expression .)
    DIVIDE          reduce using rule 47 (expression -> expression INTO expression .)
    MOD             reduce using rule 47 (expression -> expression INTO expression .)
    BINAND          reduce using rule 47 (expression -> expression INTO expression .)
    BINOR           reduce using rule 47 (expression -> expression INTO expression .)
    BINXOR          reduce using rule 47 (expression -> expression INTO expression .)
    LT              reduce using rule 47 (expression -> expression INTO expression .)
    GT              reduce using rule 47 (expression -> expression INTO expression .)
    DOUBLEEQ        reduce using rule 47 (expression -> expression INTO expression .)
    NOTEQUAL        reduce using rule 47 (expression -> expression INTO expression .)
    LTE             reduce using rule 47 (expression -> expression INTO expression .)
    GTE             reduce using rule 47 (expression -> expression INTO expression .)
    STREQUAL        reduce using rule 47 (expression -> expression INTO expression .)
    STRNEQUAL       reduce using rule 47 (expression -> expression INTO expression .)
    AND             reduce using rule 47 (expression -> expression INTO expression .)
    OR              reduce using rule 47 (expression -> expression INTO expression .)
    LSHIFT          reduce using rule 47 (expression -> expression INTO expression .)
    RSHIFT          reduce using rule 47 (expression -> expression INTO expression .)
    URSHIFT         reduce using rule 47 (expression -> expression INTO expression .)
    LEFTBRACE       reduce using rule 47 (expression -> expression INTO expression .)
    BREAK           reduce using rule 47 (expression -> expression INTO expression .)
    CONTINUE        reduce using rule 47 (expression -> expression INTO expression .)
    RETURN          reduce using rule 47 (expression -> expression INTO expression .)
    CONSOLE         reduce using rule 47 (expression -> expression INTO expression .)
    VAR             reduce using rule 47 (expression -> expression INTO expression .)
    ID              reduce using rule 47 (expression -> expression INTO expression .)
    IF              reduce using rule 47 (expression -> expression INTO expression .)
    WHILE           reduce using rule 47 (expression -> expression INTO expression .)
    FOR             reduce using rule 47 (expression -> expression INTO expression .)
    FUNCTION        reduce using rule 47 (expression -> expression INTO expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression INTO expression .)
    RIGHTPAREN      reduce using rule 47 (expression -> expression INTO expression .)
    COMMA           reduce using rule 47 (expression -> expression INTO expression .)
    RIGHTBRACKET    reduce using rule 47 (expression -> expression INTO expression .)
    BINNOT          shift and go to state 91

  ! BINNOT          [ reduce using rule 47 (expression -> expression INTO expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! INTO            [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! MOD             [ shift and go to state 95 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 142

    (61) expression -> expression LTE expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 61 (expression -> expression LTE expression .)
    BINOR           reduce using rule 61 (expression -> expression LTE expression .)
    BINXOR          reduce using rule 61 (expression -> expression LTE expression .)
    LT              reduce using rule 61 (expression -> expression LTE expression .)
    GT              reduce using rule 61 (expression -> expression LTE expression .)
    DOUBLEEQ        reduce using rule 61 (expression -> expression LTE expression .)
    NOTEQUAL        reduce using rule 61 (expression -> expression LTE expression .)
    LTE             reduce using rule 61 (expression -> expression LTE expression .)
    GTE             reduce using rule 61 (expression -> expression LTE expression .)
    STREQUAL        reduce using rule 61 (expression -> expression LTE expression .)
    STRNEQUAL       reduce using rule 61 (expression -> expression LTE expression .)
    AND             reduce using rule 61 (expression -> expression LTE expression .)
    OR              reduce using rule 61 (expression -> expression LTE expression .)
    LEFTBRACE       reduce using rule 61 (expression -> expression LTE expression .)
    BREAK           reduce using rule 61 (expression -> expression LTE expression .)
    CONTINUE        reduce using rule 61 (expression -> expression LTE expression .)
    RETURN          reduce using rule 61 (expression -> expression LTE expression .)
    CONSOLE         reduce using rule 61 (expression -> expression LTE expression .)
    VAR             reduce using rule 61 (expression -> expression LTE expression .)
    ID              reduce using rule 61 (expression -> expression LTE expression .)
    IF              reduce using rule 61 (expression -> expression LTE expression .)
    WHILE           reduce using rule 61 (expression -> expression LTE expression .)
    FOR             reduce using rule 61 (expression -> expression LTE expression .)
    FUNCTION        reduce using rule 61 (expression -> expression LTE expression .)
    SEMICOLON       reduce using rule 61 (expression -> expression LTE expression .)
    RIGHTPAREN      reduce using rule 61 (expression -> expression LTE expression .)
    COMMA           reduce using rule 61 (expression -> expression LTE expression .)
    RIGHTBRACKET    reduce using rule 61 (expression -> expression LTE expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! INTO            [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! BINNOT          [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! LSHIFT          [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! RSHIFT          [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! URSHIFT         [ reduce using rule 61 (expression -> expression LTE expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 143

    (82) ifelse -> IF expression cblock ELSE . cblock
    (83) ifelse -> IF expression cblock ELSE . if
    (84) ifelse -> IF expression cblock ELSE . ifelse
    (85) cblock -> . block
    (86) cblock -> . statement
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    IF              shift and go to state 3
    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    ifelse                         shift and go to state 167
    arraydecl                      shift and go to state 23
    statement                      shift and go to state 81
    assignment                     shift and go to state 15
    functioncall                   shift and go to state 22
    cblock                         shift and go to state 168
    block                          shift and go to state 94
    if                             shift and go to state 166

state 144

    (65) expression -> expression AND expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    AND             reduce using rule 65 (expression -> expression AND expression .)
    OR              reduce using rule 65 (expression -> expression AND expression .)
    LEFTBRACE       reduce using rule 65 (expression -> expression AND expression .)
    BREAK           reduce using rule 65 (expression -> expression AND expression .)
    CONTINUE        reduce using rule 65 (expression -> expression AND expression .)
    RETURN          reduce using rule 65 (expression -> expression AND expression .)
    CONSOLE         reduce using rule 65 (expression -> expression AND expression .)
    VAR             reduce using rule 65 (expression -> expression AND expression .)
    ID              reduce using rule 65 (expression -> expression AND expression .)
    IF              reduce using rule 65 (expression -> expression AND expression .)
    WHILE           reduce using rule 65 (expression -> expression AND expression .)
    FOR             reduce using rule 65 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 65 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 65 (expression -> expression AND expression .)
    RIGHTPAREN      reduce using rule 65 (expression -> expression AND expression .)
    COMMA           reduce using rule 65 (expression -> expression AND expression .)
    RIGHTBRACKET    reduce using rule 65 (expression -> expression AND expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! INTO            [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! BINAND          [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! BINOR           [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! BINXOR          [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! BINNOT          [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! DOUBLEEQ        [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! LTE             [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! GTE             [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! STREQUAL        [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! STRNEQUAL       [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! LSHIFT          [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! RSHIFT          [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! URSHIFT         [ reduce using rule 65 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 145

    (53) expression -> expression BINOR expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINOR           reduce using rule 53 (expression -> expression BINOR expression .)
    AND             reduce using rule 53 (expression -> expression BINOR expression .)
    OR              reduce using rule 53 (expression -> expression BINOR expression .)
    LEFTBRACE       reduce using rule 53 (expression -> expression BINOR expression .)
    BREAK           reduce using rule 53 (expression -> expression BINOR expression .)
    CONTINUE        reduce using rule 53 (expression -> expression BINOR expression .)
    RETURN          reduce using rule 53 (expression -> expression BINOR expression .)
    CONSOLE         reduce using rule 53 (expression -> expression BINOR expression .)
    VAR             reduce using rule 53 (expression -> expression BINOR expression .)
    ID              reduce using rule 53 (expression -> expression BINOR expression .)
    IF              reduce using rule 53 (expression -> expression BINOR expression .)
    WHILE           reduce using rule 53 (expression -> expression BINOR expression .)
    FOR             reduce using rule 53 (expression -> expression BINOR expression .)
    FUNCTION        reduce using rule 53 (expression -> expression BINOR expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression BINOR expression .)
    RIGHTPAREN      reduce using rule 53 (expression -> expression BINOR expression .)
    COMMA           reduce using rule 53 (expression -> expression BINOR expression .)
    RIGHTBRACKET    reduce using rule 53 (expression -> expression BINOR expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! INTO            [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! BINAND          [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! BINXOR          [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! BINNOT          [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! DOUBLEEQ        [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! NOTEQUAL        [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! LTE             [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! GTE             [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! STREQUAL        [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! STRNEQUAL       [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! LSHIFT          [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! RSHIFT          [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! URSHIFT         [ reduce using rule 53 (expression -> expression BINOR expression .) ]
  ! BINOR           [ shift and go to state 90 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]


state 146

    (55) expression -> expression BINNOT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 55 (expression -> expression BINNOT expression .)
    MINUS           reduce using rule 55 (expression -> expression BINNOT expression .)
    INTO            reduce using rule 55 (expression -> expression BINNOT expression .)
    DIVIDE          reduce using rule 55 (expression -> expression BINNOT expression .)
    MOD             reduce using rule 55 (expression -> expression BINNOT expression .)
    BINAND          reduce using rule 55 (expression -> expression BINNOT expression .)
    BINOR           reduce using rule 55 (expression -> expression BINNOT expression .)
    BINXOR          reduce using rule 55 (expression -> expression BINNOT expression .)
    LT              reduce using rule 55 (expression -> expression BINNOT expression .)
    GT              reduce using rule 55 (expression -> expression BINNOT expression .)
    DOUBLEEQ        reduce using rule 55 (expression -> expression BINNOT expression .)
    NOTEQUAL        reduce using rule 55 (expression -> expression BINNOT expression .)
    LTE             reduce using rule 55 (expression -> expression BINNOT expression .)
    GTE             reduce using rule 55 (expression -> expression BINNOT expression .)
    STREQUAL        reduce using rule 55 (expression -> expression BINNOT expression .)
    STRNEQUAL       reduce using rule 55 (expression -> expression BINNOT expression .)
    AND             reduce using rule 55 (expression -> expression BINNOT expression .)
    OR              reduce using rule 55 (expression -> expression BINNOT expression .)
    LSHIFT          reduce using rule 55 (expression -> expression BINNOT expression .)
    RSHIFT          reduce using rule 55 (expression -> expression BINNOT expression .)
    URSHIFT         reduce using rule 55 (expression -> expression BINNOT expression .)
    LEFTBRACE       reduce using rule 55 (expression -> expression BINNOT expression .)
    BREAK           reduce using rule 55 (expression -> expression BINNOT expression .)
    CONTINUE        reduce using rule 55 (expression -> expression BINNOT expression .)
    RETURN          reduce using rule 55 (expression -> expression BINNOT expression .)
    CONSOLE         reduce using rule 55 (expression -> expression BINNOT expression .)
    VAR             reduce using rule 55 (expression -> expression BINNOT expression .)
    ID              reduce using rule 55 (expression -> expression BINNOT expression .)
    IF              reduce using rule 55 (expression -> expression BINNOT expression .)
    WHILE           reduce using rule 55 (expression -> expression BINNOT expression .)
    FOR             reduce using rule 55 (expression -> expression BINNOT expression .)
    FUNCTION        reduce using rule 55 (expression -> expression BINNOT expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression BINNOT expression .)
    RIGHTPAREN      reduce using rule 55 (expression -> expression BINNOT expression .)
    COMMA           reduce using rule 55 (expression -> expression BINNOT expression .)
    RIGHTBRACKET    reduce using rule 55 (expression -> expression BINNOT expression .)
    BINNOT          shift and go to state 91

  ! BINNOT          [ reduce using rule 55 (expression -> expression BINNOT expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! INTO            [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! MOD             [ shift and go to state 95 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 147

    (69) expression -> expression URSHIFT expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    BINAND          reduce using rule 69 (expression -> expression URSHIFT expression .)
    BINOR           reduce using rule 69 (expression -> expression URSHIFT expression .)
    BINXOR          reduce using rule 69 (expression -> expression URSHIFT expression .)
    LT              reduce using rule 69 (expression -> expression URSHIFT expression .)
    GT              reduce using rule 69 (expression -> expression URSHIFT expression .)
    DOUBLEEQ        reduce using rule 69 (expression -> expression URSHIFT expression .)
    NOTEQUAL        reduce using rule 69 (expression -> expression URSHIFT expression .)
    LTE             reduce using rule 69 (expression -> expression URSHIFT expression .)
    GTE             reduce using rule 69 (expression -> expression URSHIFT expression .)
    STREQUAL        reduce using rule 69 (expression -> expression URSHIFT expression .)
    STRNEQUAL       reduce using rule 69 (expression -> expression URSHIFT expression .)
    AND             reduce using rule 69 (expression -> expression URSHIFT expression .)
    OR              reduce using rule 69 (expression -> expression URSHIFT expression .)
    LSHIFT          reduce using rule 69 (expression -> expression URSHIFT expression .)
    RSHIFT          reduce using rule 69 (expression -> expression URSHIFT expression .)
    URSHIFT         reduce using rule 69 (expression -> expression URSHIFT expression .)
    LEFTBRACE       reduce using rule 69 (expression -> expression URSHIFT expression .)
    BREAK           reduce using rule 69 (expression -> expression URSHIFT expression .)
    CONTINUE        reduce using rule 69 (expression -> expression URSHIFT expression .)
    RETURN          reduce using rule 69 (expression -> expression URSHIFT expression .)
    CONSOLE         reduce using rule 69 (expression -> expression URSHIFT expression .)
    VAR             reduce using rule 69 (expression -> expression URSHIFT expression .)
    ID              reduce using rule 69 (expression -> expression URSHIFT expression .)
    IF              reduce using rule 69 (expression -> expression URSHIFT expression .)
    WHILE           reduce using rule 69 (expression -> expression URSHIFT expression .)
    FOR             reduce using rule 69 (expression -> expression URSHIFT expression .)
    FUNCTION        reduce using rule 69 (expression -> expression URSHIFT expression .)
    SEMICOLON       reduce using rule 69 (expression -> expression URSHIFT expression .)
    RIGHTPAREN      reduce using rule 69 (expression -> expression URSHIFT expression .)
    COMMA           reduce using rule 69 (expression -> expression URSHIFT expression .)
    RIGHTBRACKET    reduce using rule 69 (expression -> expression URSHIFT expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINNOT          shift and go to state 91

  ! PLUS            [ reduce using rule 69 (expression -> expression URSHIFT expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression URSHIFT expression .) ]
  ! INTO            [ reduce using rule 69 (expression -> expression URSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression URSHIFT expression .) ]
  ! MOD             [ reduce using rule 69 (expression -> expression URSHIFT expression .) ]
  ! BINNOT          [ reduce using rule 69 (expression -> expression URSHIFT expression .) ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 148

    (66) expression -> expression OR expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    OR              reduce using rule 66 (expression -> expression OR expression .)
    LEFTBRACE       reduce using rule 66 (expression -> expression OR expression .)
    BREAK           reduce using rule 66 (expression -> expression OR expression .)
    CONTINUE        reduce using rule 66 (expression -> expression OR expression .)
    RETURN          reduce using rule 66 (expression -> expression OR expression .)
    CONSOLE         reduce using rule 66 (expression -> expression OR expression .)
    VAR             reduce using rule 66 (expression -> expression OR expression .)
    ID              reduce using rule 66 (expression -> expression OR expression .)
    IF              reduce using rule 66 (expression -> expression OR expression .)
    WHILE           reduce using rule 66 (expression -> expression OR expression .)
    FOR             reduce using rule 66 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 66 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 66 (expression -> expression OR expression .)
    RIGHTPAREN      reduce using rule 66 (expression -> expression OR expression .)
    COMMA           reduce using rule 66 (expression -> expression OR expression .)
    RIGHTBRACKET    reduce using rule 66 (expression -> expression OR expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92

  ! PLUS            [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! INTO            [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! BINAND          [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! BINOR           [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! BINXOR          [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! BINNOT          [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! DOUBLEEQ        [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! STREQUAL        [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! STRNEQUAL       [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! LSHIFT          [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! RSHIFT          [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! URSHIFT         [ reduce using rule 66 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 93 ]


state 149

    (49) expression -> expression MOD expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    PLUS            reduce using rule 49 (expression -> expression MOD expression .)
    MINUS           reduce using rule 49 (expression -> expression MOD expression .)
    INTO            reduce using rule 49 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 49 (expression -> expression MOD expression .)
    MOD             reduce using rule 49 (expression -> expression MOD expression .)
    BINAND          reduce using rule 49 (expression -> expression MOD expression .)
    BINOR           reduce using rule 49 (expression -> expression MOD expression .)
    BINXOR          reduce using rule 49 (expression -> expression MOD expression .)
    LT              reduce using rule 49 (expression -> expression MOD expression .)
    GT              reduce using rule 49 (expression -> expression MOD expression .)
    DOUBLEEQ        reduce using rule 49 (expression -> expression MOD expression .)
    NOTEQUAL        reduce using rule 49 (expression -> expression MOD expression .)
    LTE             reduce using rule 49 (expression -> expression MOD expression .)
    GTE             reduce using rule 49 (expression -> expression MOD expression .)
    STREQUAL        reduce using rule 49 (expression -> expression MOD expression .)
    STRNEQUAL       reduce using rule 49 (expression -> expression MOD expression .)
    AND             reduce using rule 49 (expression -> expression MOD expression .)
    OR              reduce using rule 49 (expression -> expression MOD expression .)
    LSHIFT          reduce using rule 49 (expression -> expression MOD expression .)
    RSHIFT          reduce using rule 49 (expression -> expression MOD expression .)
    URSHIFT         reduce using rule 49 (expression -> expression MOD expression .)
    LEFTBRACE       reduce using rule 49 (expression -> expression MOD expression .)
    BREAK           reduce using rule 49 (expression -> expression MOD expression .)
    CONTINUE        reduce using rule 49 (expression -> expression MOD expression .)
    RETURN          reduce using rule 49 (expression -> expression MOD expression .)
    CONSOLE         reduce using rule 49 (expression -> expression MOD expression .)
    VAR             reduce using rule 49 (expression -> expression MOD expression .)
    ID              reduce using rule 49 (expression -> expression MOD expression .)
    IF              reduce using rule 49 (expression -> expression MOD expression .)
    WHILE           reduce using rule 49 (expression -> expression MOD expression .)
    FOR             reduce using rule 49 (expression -> expression MOD expression .)
    FUNCTION        reduce using rule 49 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression MOD expression .)
    RIGHTPAREN      reduce using rule 49 (expression -> expression MOD expression .)
    COMMA           reduce using rule 49 (expression -> expression MOD expression .)
    RIGHTBRACKET    reduce using rule 49 (expression -> expression MOD expression .)
    BINNOT          shift and go to state 91

  ! BINNOT          [ reduce using rule 49 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 76 ]
  ! INTO            [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 85 ]
  ! MOD             [ shift and go to state 95 ]
  ! BINAND          [ shift and go to state 78 ]
  ! BINOR           [ shift and go to state 90 ]
  ! BINXOR          [ shift and go to state 83 ]
  ! LT              [ shift and go to state 80 ]
  ! GT              [ shift and go to state 84 ]
  ! DOUBLEEQ        [ shift and go to state 71 ]
  ! NOTEQUAL        [ shift and go to state 73 ]
  ! LTE             [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 77 ]
  ! STREQUAL        [ shift and go to state 79 ]
  ! STRNEQUAL       [ shift and go to state 74 ]
  ! AND             [ shift and go to state 89 ]
  ! OR              [ shift and go to state 93 ]
  ! LSHIFT          [ shift and go to state 75 ]
  ! RSHIFT          [ shift and go to state 72 ]
  ! URSHIFT         [ shift and go to state 92 ]


state 150

    (89) initialization -> assignment SEMICOLON . initialization
    (89) initialization -> . assignment SEMICOLON initialization
    (90) initialization -> . reassignment SEMICOLON initialization
    (91) initialization -> . assignment
    (92) initialization -> . reassignment
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    VAR             shift and go to state 99
    ID              shift and go to state 100

    assignment                     shift and go to state 97
    initialization                 shift and go to state 169
    reassignment                   shift and go to state 101
    arraydecl                      shift and go to state 23

state 151

    (88) forloop -> FOR LEFTPAREN initialization SEMICOLON . expression SEMICOLON increment RIGHTPAREN cblock
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    expression                     shift and go to state 170
    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    basicTypes                     shift and go to state 34

state 152

    (20) assignlist -> ID . EQ expression COMMA assignlist
    (21) assignlist -> ID . COMMA assignlist
    (23) assignlist -> ID . EQ expression
    (24) assignlist -> ID .
    (41) arraydecl -> ID . EQ LEFTBRACKET arrayList RIGHTBRACKET

    EQ              shift and go to state 171
    COMMA           shift and go to state 105
    SEMICOLON       reduce using rule 24 (assignlist -> ID .)


state 153

    (90) initialization -> reassignment SEMICOLON . initialization
    (89) initialization -> . assignment SEMICOLON initialization
    (90) initialization -> . reassignment SEMICOLON initialization
    (91) initialization -> . assignment
    (92) initialization -> . reassignment
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    VAR             shift and go to state 99
    ID              shift and go to state 100

    assignment                     shift and go to state 97
    initialization                 shift and go to state 172
    reassignment                   shift and go to state 101
    arraydecl                      shift and go to state 23

state 154

    (95) funcdecl -> FUNCTION ID LEFTPAREN argList . RIGHTPAREN cblock

    RIGHTPAREN      shift and go to state 173


state 155

    (12) statement -> CONSOLE DOT LOG LEFTPAREN . expression RIGHTPAREN SEMICOLON
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    expression                     shift and go to state 174
    basicTypes                     shift and go to state 34

state 156

    (21) assignlist -> ID COMMA assignlist .

    SEMICOLON       reduce using rule 21 (assignlist -> ID COMMA assignlist .)


state 157

    (96) funcdecl -> VAR ID EQ FUNCTION . LEFTPAREN argList RIGHTPAREN cblock SEMICOLON

    LEFTPAREN       shift and go to state 175


state 158

    (20) assignlist -> ID EQ expression . COMMA assignlist
    (23) assignlist -> ID EQ expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    COMMA           shift and go to state 176
    SEMICOLON       reduce using rule 23 (assignlist -> ID EQ expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 159

    (22) assignlist -> arraydecl COMMA assignlist .

    SEMICOLON       reduce using rule 22 (assignlist -> arraydecl COMMA assignlist .)


state 160

    (77) functioncall -> ID LEFTPAREN argList RIGHTPAREN .

    PLUS            reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    MINUS           reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    INTO            reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    DIVIDE          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    MOD             reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    BINAND          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    BINOR           reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    BINXOR          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    BINNOT          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    LT              reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    GT              reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    DOUBLEEQ        reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    NOTEQUAL        reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    LTE             reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    GTE             reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    STREQUAL        reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    STRNEQUAL       reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    AND             reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    OR              reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    LSHIFT          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    RSHIFT          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    URSHIFT         reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    SEMICOLON       reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    COMMA           reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    LEFTBRACE       reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    BREAK           reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    CONTINUE        reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    RETURN          reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    CONSOLE         reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    VAR             reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    ID              reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    IF              reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    WHILE           reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    FOR             reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)
    FUNCTION        reduce using rule 77 (functioncall -> ID LEFTPAREN argList RIGHTPAREN .)


state 161

    (79) argList -> expression COMMA . argList
    (78) argList -> . expression
    (79) argList -> . expression COMMA argList
    (80) argList -> .
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    RIGHTPAREN      reduce using rule 80 (argList -> .)
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    functioncall                   shift and go to state 32
    arrayCall                      shift and go to state 27
    argList                        shift and go to state 177
    expression                     shift and go to state 117
    basicTypes                     shift and go to state 34

state 162

    (41) arraydecl -> ID EQ LEFTBRACKET arrayList . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 178


state 163

    (42) arrayList -> expression . COMMA arrayList
    (43) arrayList -> expression .
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    COMMA           shift and go to state 179
    RIGHTBRACKET    reduce using rule 43 (arrayList -> expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 164

    (87) whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock .

    ELSE            reduce using rule 87 (whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock .)
    SEMICOLON       reduce using rule 87 (whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock .)
    $end            reduce using rule 87 (whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock .)
    RIGHTBRACE      reduce using rule 87 (whileloop -> WHILE LEFTPAREN expression RIGHTPAREN cblock .)


state 165

    (73) arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .

    PLUS            reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    MINUS           reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    INTO            reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    DIVIDE          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    MOD             reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    BINAND          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    BINOR           reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    BINXOR          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    BINNOT          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    LT              reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    GT              reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    DOUBLEEQ        reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    NOTEQUAL        reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    LTE             reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    GTE             reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    STREQUAL        reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    STRNEQUAL       reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    AND             reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    OR              reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    LSHIFT          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    RSHIFT          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    URSHIFT         reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    LEFTBRACE       reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    BREAK           reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    CONTINUE        reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    RETURN          reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    CONSOLE         reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    VAR             reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    ID              reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    IF              reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    WHILE           reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    FOR             reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    FUNCTION        reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    SEMICOLON       reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    RIGHTPAREN      reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    COMMA           reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 73 (arrayCall -> ID LEFTBRACKET expression RIGHTBRACKET .)


state 166

    (83) ifelse -> IF expression cblock ELSE if .
    (14) statement -> if .

  ! reduce/reduce conflict for ELSE resolved using rule 14 (statement -> if .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 14 (statement -> if .)
  ! reduce/reduce conflict for $end resolved using rule 14 (statement -> if .)
  ! reduce/reduce conflict for RIGHTBRACE resolved using rule 14 (statement -> if .)
    ELSE            reduce using rule 14 (statement -> if .)
    SEMICOLON       reduce using rule 14 (statement -> if .)
    $end            reduce using rule 14 (statement -> if .)
    RIGHTBRACE      reduce using rule 14 (statement -> if .)

  ! ELSE            [ reduce using rule 83 (ifelse -> IF expression cblock ELSE if .) ]
  ! SEMICOLON       [ reduce using rule 83 (ifelse -> IF expression cblock ELSE if .) ]
  ! $end            [ reduce using rule 83 (ifelse -> IF expression cblock ELSE if .) ]
  ! RIGHTBRACE      [ reduce using rule 83 (ifelse -> IF expression cblock ELSE if .) ]


state 167

    (84) ifelse -> IF expression cblock ELSE ifelse .
    (15) statement -> ifelse .

  ! reduce/reduce conflict for ELSE resolved using rule 15 (statement -> ifelse .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (statement -> ifelse .)
  ! reduce/reduce conflict for $end resolved using rule 15 (statement -> ifelse .)
  ! reduce/reduce conflict for RIGHTBRACE resolved using rule 15 (statement -> ifelse .)
    ELSE            reduce using rule 15 (statement -> ifelse .)
    SEMICOLON       reduce using rule 15 (statement -> ifelse .)
    $end            reduce using rule 15 (statement -> ifelse .)
    RIGHTBRACE      reduce using rule 15 (statement -> ifelse .)

  ! ELSE            [ reduce using rule 84 (ifelse -> IF expression cblock ELSE ifelse .) ]
  ! SEMICOLON       [ reduce using rule 84 (ifelse -> IF expression cblock ELSE ifelse .) ]
  ! $end            [ reduce using rule 84 (ifelse -> IF expression cblock ELSE ifelse .) ]
  ! RIGHTBRACE      [ reduce using rule 84 (ifelse -> IF expression cblock ELSE ifelse .) ]


state 168

    (82) ifelse -> IF expression cblock ELSE cblock .

    ELSE            reduce using rule 82 (ifelse -> IF expression cblock ELSE cblock .)
    SEMICOLON       reduce using rule 82 (ifelse -> IF expression cblock ELSE cblock .)
    $end            reduce using rule 82 (ifelse -> IF expression cblock ELSE cblock .)
    RIGHTBRACE      reduce using rule 82 (ifelse -> IF expression cblock ELSE cblock .)


state 169

    (89) initialization -> assignment SEMICOLON initialization .

    SEMICOLON       reduce using rule 89 (initialization -> assignment SEMICOLON initialization .)


state 170

    (88) forloop -> FOR LEFTPAREN initialization SEMICOLON expression . SEMICOLON increment RIGHTPAREN cblock
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    SEMICOLON       shift and go to state 180
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 171

    (20) assignlist -> ID EQ . expression COMMA assignlist
    (23) assignlist -> ID EQ . expression
    (41) arraydecl -> ID EQ . LEFTBRACKET arrayList RIGHTBRACKET
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    LEFTBRACKET     shift and go to state 119
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    expression                     shift and go to state 158
    basicTypes                     shift and go to state 34

state 172

    (90) initialization -> reassignment SEMICOLON initialization .

    SEMICOLON       reduce using rule 90 (initialization -> reassignment SEMICOLON initialization .)


state 173

    (95) funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN . cblock
    (85) cblock -> . block
    (86) cblock -> . statement
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    assignment                     shift and go to state 15
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    arraydecl                      shift and go to state 23
    functioncall                   shift and go to state 22
    statement                      shift and go to state 81
    ifelse                         shift and go to state 10
    cblock                         shift and go to state 181
    block                          shift and go to state 94
    if                             shift and go to state 5

state 174

    (12) statement -> CONSOLE DOT LOG LEFTPAREN expression . RIGHTPAREN SEMICOLON
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . INTO expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . MOD expression
    (52) expression -> expression . BINAND expression
    (53) expression -> expression . BINOR expression
    (54) expression -> expression . BINXOR expression
    (55) expression -> expression . BINNOT expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . GT expression
    (59) expression -> expression . DOUBLEEQ expression
    (60) expression -> expression . NOTEQUAL expression
    (61) expression -> expression . LTE expression
    (62) expression -> expression . GTE expression
    (63) expression -> expression . STREQUAL expression
    (64) expression -> expression . STRNEQUAL expression
    (65) expression -> expression . AND expression
    (66) expression -> expression . OR expression
    (67) expression -> expression . LSHIFT expression
    (68) expression -> expression . RSHIFT expression
    (69) expression -> expression . URSHIFT expression

    RIGHTPAREN      shift and go to state 182
    PLUS            shift and go to state 82
    MINUS           shift and go to state 76
    INTO            shift and go to state 86
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 95
    BINAND          shift and go to state 78
    BINOR           shift and go to state 90
    BINXOR          shift and go to state 83
    BINNOT          shift and go to state 91
    LT              shift and go to state 80
    GT              shift and go to state 84
    DOUBLEEQ        shift and go to state 71
    NOTEQUAL        shift and go to state 73
    LTE             shift and go to state 87
    GTE             shift and go to state 77
    STREQUAL        shift and go to state 79
    STRNEQUAL       shift and go to state 74
    AND             shift and go to state 89
    OR              shift and go to state 93
    LSHIFT          shift and go to state 75
    RSHIFT          shift and go to state 72
    URSHIFT         shift and go to state 92


state 175

    (96) funcdecl -> VAR ID EQ FUNCTION LEFTPAREN . argList RIGHTPAREN cblock SEMICOLON
    (78) argList -> . expression
    (79) argList -> . expression COMMA argList
    (80) argList -> .
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    RIGHTPAREN      reduce using rule 80 (argList -> .)
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    argList                        shift and go to state 183
    expression                     shift and go to state 117
    basicTypes                     shift and go to state 34

state 176

    (20) assignlist -> ID EQ expression COMMA . assignlist
    (20) assignlist -> . ID EQ expression COMMA assignlist
    (21) assignlist -> . ID COMMA assignlist
    (22) assignlist -> . arraydecl COMMA assignlist
    (23) assignlist -> . ID EQ expression
    (24) assignlist -> . ID
    (25) assignlist -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 152

    assignlist                     shift and go to state 184
    arraydecl                      shift and go to state 45

state 177

    (79) argList -> expression COMMA argList .

    RIGHTPAREN      reduce using rule 79 (argList -> expression COMMA argList .)


state 178

    (41) arraydecl -> ID EQ LEFTBRACKET arrayList RIGHTBRACKET .

    COMMA           reduce using rule 41 (arraydecl -> ID EQ LEFTBRACKET arrayList RIGHTBRACKET .)
    SEMICOLON       reduce using rule 41 (arraydecl -> ID EQ LEFTBRACKET arrayList RIGHTBRACKET .)
    RIGHTPAREN      reduce using rule 41 (arraydecl -> ID EQ LEFTBRACKET arrayList RIGHTBRACKET .)


state 179

    (42) arrayList -> expression COMMA . arrayList
    (42) arrayList -> . expression COMMA arrayList
    (43) arrayList -> . expression
    (44) arrayList -> .
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression INTO expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression MOD expression
    (50) expression -> . LEFTPAREN expression RIGHTPAREN
    (51) expression -> . NOT expression
    (52) expression -> . expression BINAND expression
    (53) expression -> . expression BINOR expression
    (54) expression -> . expression BINXOR expression
    (55) expression -> . expression BINNOT expression
    (56) expression -> . BINNOT expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression GT expression
    (59) expression -> . expression DOUBLEEQ expression
    (60) expression -> . expression NOTEQUAL expression
    (61) expression -> . expression LTE expression
    (62) expression -> . expression GTE expression
    (63) expression -> . expression STREQUAL expression
    (64) expression -> . expression STRNEQUAL expression
    (65) expression -> . expression AND expression
    (66) expression -> . expression OR expression
    (67) expression -> . expression LSHIFT expression
    (68) expression -> . expression RSHIFT expression
    (69) expression -> . expression URSHIFT expression
    (70) expression -> . basicTypes
    (71) expression -> . functioncall
    (72) expression -> . arrayCall
    (74) basicTypes -> . NUMBER
    (75) basicTypes -> . STRING
    (76) basicTypes -> . ID
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (73) arrayCall -> . ID LEFTBRACKET expression RIGHTBRACKET

    RIGHTBRACKET    reduce using rule 44 (arrayList -> .)
    LEFTPAREN       shift and go to state 29
    NOT             shift and go to state 33
    BINNOT          shift and go to state 31
    NUMBER          shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 30

    arrayList                      shift and go to state 185
    arrayCall                      shift and go to state 27
    functioncall                   shift and go to state 32
    expression                     shift and go to state 163
    basicTypes                     shift and go to state 34

state 180

    (88) forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON . increment RIGHTPAREN cblock
    (93) increment -> . reassignment SEMICOLON increment
    (94) increment -> . reassignment
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 100

    reassignment                   shift and go to state 187
    increment                      shift and go to state 186
    arraydecl                      shift and go to state 23

state 181

    (95) funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock .

    ELSE            reduce using rule 95 (funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock .)
    SEMICOLON       reduce using rule 95 (funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock .)
    $end            reduce using rule 95 (funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock .)
    RIGHTBRACE      reduce using rule 95 (funcdecl -> FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock .)


state 182

    (12) statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 188


state 183

    (96) funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList . RIGHTPAREN cblock SEMICOLON

    RIGHTPAREN      shift and go to state 189


state 184

    (20) assignlist -> ID EQ expression COMMA assignlist .

    SEMICOLON       reduce using rule 20 (assignlist -> ID EQ expression COMMA assignlist .)


state 185

    (42) arrayList -> expression COMMA arrayList .

    RIGHTBRACKET    reduce using rule 42 (arrayList -> expression COMMA arrayList .)


state 186

    (88) forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment . RIGHTPAREN cblock

    RIGHTPAREN      shift and go to state 190


state 187

    (93) increment -> reassignment . SEMICOLON increment
    (94) increment -> reassignment .

    SEMICOLON       shift and go to state 191
    RIGHTPAREN      reduce using rule 94 (increment -> reassignment .)


state 188

    (12) statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON .

    SEMICOLON       reduce using rule 12 (statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON .)
    $end            reduce using rule 12 (statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON .)
    RIGHTBRACE      reduce using rule 12 (statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON .)
    ELSE            reduce using rule 12 (statement -> CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON .)


state 189

    (96) funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN . cblock SEMICOLON
    (85) cblock -> . block
    (86) cblock -> . statement
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    assignment                     shift and go to state 15
    funcdecl                       shift and go to state 19
    reassignment                   shift and go to state 7
    arraydecl                      shift and go to state 23
    functioncall                   shift and go to state 22
    statement                      shift and go to state 81
    ifelse                         shift and go to state 10
    cblock                         shift and go to state 192
    block                          shift and go to state 94
    if                             shift and go to state 5

state 190

    (88) forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN . cblock
    (85) cblock -> . block
    (86) cblock -> . statement
    (3) block -> . LEFTBRACE statements RIGHTBRACE
    (4) block -> . LEFTBRACE RIGHTBRACE
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . reassignment SEMICOLON
    (9) statement -> . BREAK SEMICOLON
    (10) statement -> . CONTINUE SEMICOLON
    (11) statement -> . RETURN expression SEMICOLON
    (12) statement -> . CONSOLE DOT LOG LEFTPAREN expression RIGHTPAREN SEMICOLON
    (13) statement -> . functioncall SEMICOLON
    (14) statement -> . if
    (15) statement -> . ifelse
    (16) statement -> . whileloop
    (17) statement -> . forloop
    (18) statement -> . funcdecl
    (19) assignment -> . VAR assignlist
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (77) functioncall -> . ID LEFTPAREN argList RIGHTPAREN
    (81) if -> . IF expression cblock
    (82) ifelse -> . IF expression cblock ELSE cblock
    (83) ifelse -> . IF expression cblock ELSE if
    (84) ifelse -> . IF expression cblock ELSE ifelse
    (87) whileloop -> . WHILE LEFTPAREN expression RIGHTPAREN cblock
    (88) forloop -> . FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock
    (95) funcdecl -> . FUNCTION ID LEFTPAREN argList RIGHTPAREN cblock
    (96) funcdecl -> . VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    LEFTBRACE       shift and go to state 18
    BREAK           shift and go to state 20
    CONTINUE        shift and go to state 21
    RETURN          shift and go to state 4
    CONSOLE         shift and go to state 14
    VAR             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 3
    WHILE           shift and go to state 2
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 12

    whileloop                      shift and go to state 6
    forloop                        shift and go to state 13
    reassignment                   shift and go to state 7
    functioncall                   shift and go to state 22
    arraydecl                      shift and go to state 23
    statement                      shift and go to state 81
    assignment                     shift and go to state 15
    ifelse                         shift and go to state 10
    cblock                         shift and go to state 193
    funcdecl                       shift and go to state 19
    block                          shift and go to state 94
    if                             shift and go to state 5

state 191

    (93) increment -> reassignment SEMICOLON . increment
    (93) increment -> . reassignment SEMICOLON increment
    (94) increment -> . reassignment
    (26) reassignment -> . ID EQ expression
    (27) reassignment -> . ID PLUSEQ expression
    (28) reassignment -> . ID MINUSEQ expression
    (29) reassignment -> . ID INTOEQ expression
    (30) reassignment -> . ID DIVEQ expression
    (31) reassignment -> . ID INCR
    (32) reassignment -> . ID DECR
    (33) reassignment -> . ID LSHIFTEQ expression
    (34) reassignment -> . ID RSHIFTEQ expression
    (35) reassignment -> . ID URSHIFTEQ expression
    (36) reassignment -> . ID ANDEQ expression
    (37) reassignment -> . ID OREQ expression
    (38) reassignment -> . ID XOREQ expression
    (39) reassignment -> . ID MODEQ expression
    (40) reassignment -> . arraydecl
    (41) arraydecl -> . ID EQ LEFTBRACKET arrayList RIGHTBRACKET

    ID              shift and go to state 100

    reassignment                   shift and go to state 187
    arraydecl                      shift and go to state 23
    increment                      shift and go to state 194

state 192

    (96) funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock . SEMICOLON

    SEMICOLON       shift and go to state 195


state 193

    (88) forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock .

    SEMICOLON       reduce using rule 88 (forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock .)
    RIGHTBRACE      reduce using rule 88 (forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock .)
    ELSE            reduce using rule 88 (forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock .)
    $end            reduce using rule 88 (forloop -> FOR LEFTPAREN initialization SEMICOLON expression SEMICOLON increment RIGHTPAREN cblock .)


state 194

    (93) increment -> reassignment SEMICOLON increment .

    RIGHTPAREN      reduce using rule 93 (increment -> reassignment SEMICOLON increment .)


state 195

    (96) funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON .

    ELSE            reduce using rule 96 (funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON .)
    SEMICOLON       reduce using rule 96 (funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON .)
    $end            reduce using rule 96 (funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON .)
    RIGHTBRACE      reduce using rule 96 (funcdecl -> VAR ID EQ FUNCTION LEFTPAREN argList RIGHTPAREN cblock SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 88 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 97 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 101 resolved as shift
WARNING: reduce/reduce conflict in state 166 resolved using rule (statement -> if)
WARNING: rejected rule (ifelse -> IF expression cblock ELSE if) in state 166
WARNING: reduce/reduce conflict in state 167 resolved using rule (statement -> ifelse)
WARNING: rejected rule (ifelse -> IF expression cblock ELSE ifelse) in state 167
WARNING: Rule (ifelse -> IF expression cblock ELSE if) is never reduced
WARNING: Rule (ifelse -> IF expression cblock ELSE ifelse) is never reduced
